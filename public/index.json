[{"content":"When developing with Go on a team, it is useful to have a good branching strategy so you can work together as a team and not tromp on each others changes.\nBut how do you use Go modules with a branching strategy? It\u0026rsquo;s easy to refer to another project (even at a certain version) \u0026ndash; but branches seem to offer a bit of a challenge.\nThe official guidance involves using the specific commit hash for the module you want, like this:\ngo get github.com/someone/some_module@af044c0995fe Or hand-editing the go.mod file to include that specific commit hash, like this:\nmodule /my/module require ( ... github.com/someone/some_module v0.0.0-20181121201909-af044c0995fe ... ) But finding that hash can be tricky sometimes. And what if you just want to make the substituion temporarily using the replace syntax in go.mod?\nLucky for us, there is a simpler solution: Use the branch name when using the replace directive. It looks like this at the bottom of your go.mod file:\nreplace github.com/owner/repo-name =\u0026gt; github.com/owner/repo-name branch-name Notice the space between the repo and the branch name \u0026ndash; that\u0026rsquo;s important.\nIf you try to do a go install ./... on the project, go will prompt you to do a go mod tidy.\nWhen you do this, go automatically updates the replace directive to use the appropriate semver version instead of the branch name!\nNow the go.mod line will look like this:\nreplace github.com/owner/repo-name =\u0026gt; github.com/owner/repo-name v1.36.1-0.20221130164838-4a00d9d3a2fa It\u0026rsquo;s so handy!\n","permalink":"https://danesparza.github.io/2022/12/use-branches-with-go-modules/","summary":"When developing with Go on a team, it is useful to have a good branching strategy so you can work together as a team and not tromp on each others changes.\nBut how do you use Go modules with a branching strategy? It\u0026rsquo;s easy to refer to another project (even at a certain version) \u0026ndash; but branches seem to offer a bit of a challenge.\nThe official guidance involves using the specific commit hash for the module you want, like this:","title":"Use Branches With Go Modules"},{"content":"Let\u0026rsquo;s talk about your development workflow. If you\u0026rsquo;re still including all of your scripts in your pages using a \u0026lt;script\u0026gt; tag, you\u0026rsquo;re doing it wrong. A modern front-end workflow includes some kind of dependency management solution, and some kind of bundling / minification process.\nPrereqs: Package management and Git console npm Even if you don\u0026rsquo;t use Node.js for your server use npm for managing your client-side dependencies. It really makes adding and removing compenents a breeze!\nTo get npm, just install Node. Installation is a snap, and should only take a few minutes. Installers are available for all platforms.\npackage.json Also take a few minutes to understand the package.json file format. It\u0026rsquo;s basically an npm project file for your app \u0026ndash; it tells npm things about your app, your app dependencies, and your development time dependencies (like script bundlers and transpilers). It\u0026rsquo;s a pretty widely adopted standard now.\nA command line with less suck If you\u0026rsquo;re doing development in Windows, the built-in console sucks. Try installing MsysGit for windows and just opening a Git bash prompt on your development directory (by right-clicking on it and selecting \u0026lsquo;Git Bash here\u0026rsquo;). Then you get tab-completion, history, and lovely colored output all for free!\nDependency management Browserify For dependency management, I prefer Browserify and npm. Browserify provides a Node flavored way to require javascript modules. For example, including the excellent MomentJS library in your code is as simple as adding var Moment = require('moment'); to your javascript source.\nuglify For building/minification I prefer a simple npm script and the unfortunately named uglify. This, combined with the package.json file provide a very nice way to install all the script dependencies your app requires.\nBabel With ES6 (the next version of Javascript) right around the corner, why not start using those new features now? Yes. Even if your current browser doesn\u0026rsquo;t support them.\nHow? Using a transpiler, of course!\nI prefer using Babel as a transpiler (which is also quickly becoming a standard).\nLearn more about ES6 (also called ES2015) here. In the meantime \u0026hellip;\nInstalling it all To install Browserify, uglify and Babel using npm, drop to a command line and run:\nnpm install -g browserify uglify-js babel Tying it all together A package.json from my most recent single-page-application looks like this:\n{ \u0026quot;name\u0026quot;: \u0026quot;family-dashboard\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;Family dashboard\u0026quot;, \u0026quot;version\u0026quot;: \u0026quot;0.1.3\u0026quot;, \u0026quot;author\u0026quot;: \u0026quot;Dan Esparza\u0026quot;, \u0026quot;browserify\u0026quot;: { \u0026quot;transform\u0026quot;: [ \u0026quot;babelify\u0026quot;, \u0026quot;envify\u0026quot; ] }, \u0026quot;bugs\u0026quot;: { \u0026quot;url\u0026quot;: \u0026quot;https://github.com/danesparza/Dashboard/issues\u0026quot; }, \u0026quot;dependencies\u0026quot;: { \u0026quot;cookies-js\u0026quot;: \u0026quot;^1.0.0\u0026quot;, \u0026quot;director\u0026quot;: \u0026quot;^1.2.7\u0026quot;, \u0026quot;flux\u0026quot;: \u0026quot;^2.1.1\u0026quot;, \u0026quot;keymirror\u0026quot;: \u0026quot;~0.1.0\u0026quot;, \u0026quot;moment\u0026quot;: \u0026quot;^2.9.0\u0026quot;, \u0026quot;moment-timezone\u0026quot;: \u0026quot;^0.3.0\u0026quot;, \u0026quot;object-assign\u0026quot;: \u0026quot;^1.0.0\u0026quot;, \u0026quot;react\u0026quot;: \u0026quot;^0.13.3\u0026quot;, \u0026quot;react-radio-group\u0026quot;: \u0026quot;2.1.1\u0026quot; }, \u0026quot;devDependencies\u0026quot;: { \u0026quot;babelify\u0026quot;: \u0026quot;^6.3.0\u0026quot;, \u0026quot;browserify\u0026quot;: \u0026quot;^6.2.0\u0026quot;, \u0026quot;envify\u0026quot;: \u0026quot;^3.0.0\u0026quot;, \u0026quot;uglify-js\u0026quot;: \u0026quot;~2.4.15\u0026quot;, \u0026quot;watchify\u0026quot;: \u0026quot;^2.1.1\u0026quot; }, \u0026quot;keywords\u0026quot;: [ \u0026quot;calendar\u0026quot;, \u0026quot;dashboard\u0026quot;, \u0026quot;flux\u0026quot;, \u0026quot;google\u0026quot;, \u0026quot;react\u0026quot;, \u0026quot;weather\u0026quot; ], \u0026quot;license\u0026quot;: \u0026quot;MIT\u0026quot;, \u0026quot;main\u0026quot;: \u0026quot;js/app.js\u0026quot;, \u0026quot;repository\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;git\u0026quot;, \u0026quot;url\u0026quot;: \u0026quot;https://github.com/danesparza/Dashboard.git\u0026quot; }, \u0026quot;scripts\u0026quot;: { \u0026quot;build\u0026quot;: \u0026quot;browserify js/app.js -t babelify | uglifyjs -cm \u0026gt; js/bundle.js\u0026quot;, \u0026quot;start\u0026quot;: \u0026quot;watchify -v -t babelify js/app.js -o js/bundle.js\u0026quot; } } Pay close attention to the scripts section, above.\nMy finished workflow looks like this\u0026hellip;\nWhen I want to install a new application dependency, add it to the package.json file and run:\nnpm install When I want to develop some code, I drop to a git bash prompt and run:\nnpm start This will automatically watch for changes and rebuild my bundle.js whenever a change is made to any javascript file in the app.\nWhen I want to do a full minimized release build, I just run:\nnpm run build Next up\u0026hellip; Next, I\u0026rsquo;ll be checking out webpack to replace Browserify for even more fancy features!\n","permalink":"https://danesparza.github.io/2015/10/modern-javascript-workflow/","summary":"Let\u0026rsquo;s talk about your development workflow. If you\u0026rsquo;re still including all of your scripts in your pages using a \u0026lt;script\u0026gt; tag, you\u0026rsquo;re doing it wrong. A modern front-end workflow includes some kind of dependency management solution, and some kind of bundling / minification process.\nPrereqs: Package management and Git console npm Even if you don\u0026rsquo;t use Node.js for your server use npm for managing your client-side dependencies. It really makes adding and removing compenents a breeze!","title":"A modern Javascript workflow"},{"content":"Created in 2010, NuGet is a free and open source package manager for the Microsoft development platform. NuGet has become the defacto way of distributing tools and libraries in the Microsoft developer community.\nIf you\u0026rsquo;re interested in working with NuGet, here are some tips and tricks that will be helpful to you.\nCreating NuGet packages Creating NuGet packages from scratch can be daunting for a first-timer.\nnuspec != nupkg First, you need to understand that there is a difference between the types of files that NuGet uses:\nA .nupkg file is the package that is installed on a destination machine. A .nuspec is a template that is used to create versioned package files. You can always refer to the Nuspec reference, but using the NuGet package explorer makes it a bit easier:\nYou can easily set your package name, version, author, and even the files in your NuGet package from the NuGet package explorer. When you\u0026rsquo;re done, remember to save the .nuspec file by selecting \u0026lsquo;File / Save Metadata as\u0026hellip;\u0026rsquo;\nUse the same name as your project Wondering where to store your .nuspec file? Store it in the same directory as your .csproj file and name it the same thing as your project.\nExample:\nProject name: MailChimp.csproj Nuspec name: MailChimp.nuspec This gives you the option of using the version of nuget pack that allows you to build your .nupkg directly from your project file: nuget pack foo.csproj\nWhen you call it this way, NuGet will examine your project references and automatically include everything it needs to in the package.\nDon\u0026rsquo;t hardcode version numbers Don\u0026rsquo;t store the version number in your .nuspec file.\nInstead, use the $version$ placeholder instead - this takes whatever version number you have in your AssemblyInfo.cs file.\nAlternatively, you can also pass in the version number on the command line when you generate your nuget package using the -Version parameter. Example: nuget pack foo.nuspec -Version 2.1.0\nThere are many other replacement tokens you can use to automatically sync information in your NuGet package as well.\nPublishing packages on NuGet.org Many NuGet packages are available on NuGet.org. NuGet.org is the default package source for the NuGet plugin for Visual Studio. If you decide to distribute your package on NuGet.org \u0026ndash; you\u0026rsquo;ll instantly make it available to hundreds of thousands of developers around the world.\nWhen creating a NuGet package for an open source project, start by creating an account https://www.nuget.org if you haven\u0026rsquo;t already.\nWhere do I get my API key? Your API key can be found on your NuGet.org account page (near the bottom) \u0026ndash; you\u0026rsquo;ll need this when publishing nuget packages using various tools:\nYou can publish directly using the NuGet package explorer. In the app, go to File / Publish and enter your API key where it prompts for \u0026lsquo;Publish key\u0026rsquo; You can publish directly using using NuGet. Using the nuget command line tool, you can supply your API key to publish: nuget push \u0026lt;package path\u0026gt; [API key] [options] Publishing packages inside your company To publish your packages inside your company you\u0026rsquo;ll need to first setup an internal NuGet server. The easiest way to get up and running is to use the NuGet.Server package to create, build, and deploy a mini NuGet server internally.\nPushing NuGet packages is as simple as copying new packages to the source directory or using the nuget push command-line syntax. I recommend you use one of these methods as part of a continuous integration build process.\nNext, your consuming dev teams just need to add a new NuGet package source in their Visual Studio Package Manager.\nFinding, installing and managing your internal packages is now just as easy as using NuGet!\nAdditional reading Top 10 NuGet antipatterns LosTechies tips on NuGet packages Automatically build open-source NuGet packages with AppVeyor ","permalink":"https://danesparza.github.io/2015/04/nuget-tips/","summary":"Created in 2010, NuGet is a free and open source package manager for the Microsoft development platform. NuGet has become the defacto way of distributing tools and libraries in the Microsoft developer community.\nIf you\u0026rsquo;re interested in working with NuGet, here are some tips and tricks that will be helpful to you.\nCreating NuGet packages Creating NuGet packages from scratch can be daunting for a first-timer.\nnuspec != nupkg First, you need to understand that there is a difference between the types of files that NuGet uses:","title":"NuGet tips"},{"content":"Interested in using a password manager for all your passwords?\nYou should be.\nServices like OpenId are catching on, but aren\u0026rsquo;t as widespread as originally hoped. You might visit hundreds of different sites a year that use a login and password.\nUsing the same password for every website and service is a terrible idea: A hacker just needs to compromise one of the services you visit and they\u0026rsquo;ve got the username/password for all the sites you visit. Ideally, they should all have different passwords \u0026ndash; but how in the world could you remember all of them?\nKeepass to the rescue This is where Keepass comes in. Keepass is a free, open source password manager for Windows (with OSX and iOS equivalents):\nOpen source is important when it comes to security \u0026ndash; if you\u0026rsquo;re a developer, you can actually make sure the algorithms used to secure your data are being used properly. Keepass stores your passwords in a secure file-based database.\nGenerate a new username and password for every site Generating a new login for a site is really simple with Keepass. First, make sure that you\u0026rsquo;ve installed it from the KeePass website, here: http://keepass.info\nCreate a new database. You will pick a single password to \u0026lsquo;unlock\u0026rsquo; Keepass and get to your other passwords. Make sure it\u0026rsquo;s different and not obvious. It will be one of the last passwords you\u0026rsquo;ll ever have to memorize.\nWith your database created and unlocked, select \u0026lsquo;Edit / Add entry\u0026rsquo; - or right click and select \u0026lsquo;Add entry\u0026rsquo; Fill in the name of the site and service and the username you\u0026rsquo;d like to use. Your password will be automatically generated. Optional: Press the \u0026lsquo;generate new password\u0026rsquo; button and create a password according to custom rules Optional: Add a url for the site to make it easier to remember where to go to enter your credentials Press \u0026lsquo;OK\u0026rsquo; to create the new entry It\u0026rsquo;s just that simple!\nBackup and sync your passwords Now that you have Keepass up and running you might ask, \u0026ldquo;But what if something terrible happens to my computer \u0026ndash; shouldn\u0026rsquo;t I be backing this up? What if I have multiple computers \u0026ndash; how do I securely share my passwords among all my machines?\u0026rdquo;\nNot to worry \u0026ndash; this is where Dropbox comes in. Dropbox is a free service for up to 2GB of data (you can earn more with referrals, or just sign up for their monthly service \u0026ndash; it\u0026rsquo;s not terribly expensive).\nAfter signing up for Dropbox and getting it installed locally, create a \u0026lsquo;Keepass\u0026rsquo; directory under your dropbox. Move (or create) your Keepass .kdbx file(s) to this directory. When you\u0026rsquo;re done, this should be the only location on your computer that has Keepass files.\nFinishing up When you start Keepass, make sure it opens the databases in the directories under Dropbox. Make sure that Keepass is set to start automatically.\nIf you have additional questions about Keepass, check out the FAQ on the website.\nIf you have additional questions about Dropbox, check out the Dropbox help center.\n","permalink":"https://danesparza.github.io/2014/09/using-keepass-and-dropbox-to-manage-passwords/","summary":"Interested in using a password manager for all your passwords?\nYou should be.\nServices like OpenId are catching on, but aren\u0026rsquo;t as widespread as originally hoped. You might visit hundreds of different sites a year that use a login and password.\nUsing the same password for every website and service is a terrible idea: A hacker just needs to compromise one of the services you visit and they\u0026rsquo;ve got the username/password for all the sites you visit.","title":"Use Keepass and dropbox to manage your passwords"},{"content":"I do a lot of development with websites in Visual Studio 2013 nowadays. I\u0026rsquo;ve discovered that in order to use IISExpress with Windows Authentication, I had to jump through some hoops. You may find yourself banging your head on the wall trying to get IISExpress to work with Windows auth \u0026ndash; so here are few tips for you.\nUpdate your web.config Make sure your web.config file both enables windows authentication and also denies anonymous authentication. HttpContext.Current.User.Identity.Name will be blank if the app falls through to anonymous authentication. Your config should look something like this:\n\u0026lt;authentication mode=\u0026quot;Windows\u0026quot; /\u0026gt; \u0026lt;authorization\u0026gt; \u0026lt;deny users=\u0026quot;?\u0026quot;/\u0026gt; \u0026lt;/authorization\u0026gt; Error 401.2 Unauthorized Sometimes, you might get the 401.2 Unauthorized: Logon failed due to server configuration error. If you do, verify that you have permission to view this directory or page based on the credentials you supplied. Also make sure you have the authentication methods enabled on the Web server.\nUpdating applicationhost.config You also might find you have to update the IISExpress applicationhost.config file (dont\u0026rsquo; worry \u0026ndash; I didn\u0026rsquo;t know it either). This is essentially the file version of the IIS configuration tool, where you can configure the web server itself. Finding the applicationhost.config file can be tricky. It might be in:\n%userprofile%\\documents\\iisexpress\\config\\applicationhost.config\nor\n%userprofile%\\my documents\\iisexpress\\config\\applicationhost.config\nOnce you find it, update the following lines (paying special attention to enabled=true):\n\u0026lt;windowsAuthentication enabled=\u0026quot;true\u0026quot;\u0026gt; \u0026lt;providers\u0026gt; \u0026lt;add value=\u0026quot;Negotiate\u0026quot; /\u0026gt; \u0026lt;add value=\u0026quot;NTLM\u0026quot; /\u0026gt; \u0026lt;/providers\u0026gt; \u0026lt;/windowsAuthentication\u0026gt; ","permalink":"https://danesparza.github.io/2014/09/using-windows-authentication-with-iisexpress/","summary":"I do a lot of development with websites in Visual Studio 2013 nowadays. I\u0026rsquo;ve discovered that in order to use IISExpress with Windows Authentication, I had to jump through some hoops. You may find yourself banging your head on the wall trying to get IISExpress to work with Windows auth \u0026ndash; so here are few tips for you.\nUpdate your web.config Make sure your web.config file both enables windows authentication and also denies anonymous authentication.","title":"Using Windows Authentication with IISExpress"},{"content":"I\u0026rsquo;ve had cause to work with NLog a lot lately. In working with it, I have discovered some surprises and tricks that I thought I would share.\nLog levels matter You should think carefully about your log levels as you start adding logging to your app. Trace should probably be used sparingly, because when you turn on log level \u0026lsquo;Trace\u0026rsquo; that means you\u0026rsquo;re pretty much logging EVERYTHING. Log level Debug or Info might be a better level to start with.\nThis makes a bit more sense as you think about the types of things you might be logging in production. If you log very large detailed messages \u0026ndash; like complete dumps of email messages with attachments \u0026ndash; you might want to log just those few large things using the Trace log methods. That way, when you change the log level to Debug in the nlog.config, you won\u0026rsquo;t log the gigantic messages to your log.\nAutomatic log rotation Nlog can automatically rotate your logs. It can be configured to keep the last \u0026rsquo;n\u0026rsquo; number of days and delete the rest automatically. This can be very useful in production, where you don\u0026rsquo;t want System Operations to worry about rotating logs or deleting old logs.\nHere is a sample nlog.config that handles log rotation automatically:\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;utf-8\u0026quot; ?\u0026gt; \u0026lt;nlog xmlns=\u0026quot;http://www.nlog-project.org/schemas/NLog.xsd\u0026quot; xmlns:xsi=\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot;\u0026gt; \u0026lt;!-- See http://nlog-project.org/wiki/Configuration_file for information on customizing logging rules and outputs. --\u0026gt; \u0026lt;targets\u0026gt; \u0026lt;!-- add your targets here --\u0026gt; \u0026lt;target name=\u0026quot;f\u0026quot; xsi:type=\u0026quot;File\u0026quot; layout=\u0026quot;${longdate} ${logger} ${message} ${exception:format=tostring}\u0026quot; fileName=\u0026quot;${basedir}/logs/current.log\u0026quot; archiveFileName=\u0026quot;${basedir}/logs/archive.{#}.log\u0026quot; archiveEvery=\u0026quot;Day\u0026quot; archiveNumbering=\u0026quot;Rolling\u0026quot; maxArchiveFiles=\u0026quot;7\u0026quot; concurrentWrites=\u0026quot;true\u0026quot; keepFileOpen=\u0026quot;false\u0026quot; encoding=\u0026quot;iso-8859-2\u0026quot; /\u0026gt; \u0026lt;/targets\u0026gt; \u0026lt;!-- Add your logging rules here. --\u0026gt; \u0026lt;rules\u0026gt; \u0026lt;logger name=\u0026quot;*\u0026quot; minlevel=\u0026quot;Info\u0026quot; writeTo=\u0026quot;f\u0026quot; /\u0026gt; \u0026lt;/rules\u0026gt; \u0026lt;/nlog\u0026gt; Programmatically find where the log is You can use the NLog API to find out where the current log is programatically. This can be useful if you want to email the current log for some reason.\nTo get the current log file, you need to know the current log file name in the nlog.config.\n//\tFind the correct target var fileTarget = (FileTarget)LogManager.Configuration.FindTargetByName(\u0026quot;f\u0026quot;); //\tUsing the target, get the full path to the log file string retval = Path.GetFullPath(fileTarget.FileName.Render(logEventInfo)); Logging an exception requires an update to your layout You may have seen the ErrorException, WarnException (and other) methods on the Nlog object. They are used to log exception stack traces in your code automatically, like this:\ntry { //\t... Some code that might cause an exception } catch (WebException webEx) { logger.ErrorException(\u0026quot;There was a serious problem communicating with on the network\u0026quot;, webEx); } In this case, the webEx exception object is the one we\u0026rsquo;d like to log, along with the message. The problem is, if we don\u0026rsquo;t include an ${exception} placeholder to our layout, the exception stack trace won\u0026rsquo;t get logged.\nFor example, if your current layout was:\n\u0026lt;target name=\u0026quot;Errors\u0026quot; xsi:type=\u0026quot;File\u0026quot; fileName=\u0026quot;${logDirectory}/ErrorLog.txt\u0026quot; layout=\u0026quot;${longdate} ${message}\u0026quot;/\u0026gt; You would need to change it to:\n\u0026lt;target name=\u0026quot;Errors\u0026quot; xsi:type=\u0026quot;File\u0026quot; fileName=\u0026quot;${logDirectory}/ErrorLog.txt\u0026quot; layout=\u0026quot;${longdate} ${message} ${exception:format=tostring}\u0026quot;/\u0026gt; In order to log exceptions properly.\nYou can log all network traffic This is kind of bananas. I discovered this neat trick when troubleshooting a web service I had written. In a nutshell you can log all low level network traffic \u0026ndash; even when you are only indirectly calling network libraries. This can help you diagnose SSL certificate errors, among other things.\nAdding the following to your web.config/app.config file will log all windows sockets traffic for you automatically:\n\u0026lt;system.diagnostics\u0026gt; \u0026lt;sources\u0026gt; \u0026lt;source name=\u0026quot;System.Net\u0026quot; switchValue=\u0026quot;All\u0026quot;\u0026gt; \u0026lt;listeners\u0026gt; \u0026lt;add name=\u0026quot;nlog\u0026quot; /\u0026gt; \u0026lt;/listeners\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;source name=\u0026quot;System.Net.Sockets\u0026quot; switchValue=\u0026quot;All\u0026quot;\u0026gt; \u0026lt;listeners\u0026gt; \u0026lt;add name=\u0026quot;nlog\u0026quot; /\u0026gt; \u0026lt;/listeners\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;/sources\u0026gt; \u0026lt;sharedListeners\u0026gt; \u0026lt;add name=\u0026quot;nlog\u0026quot; type=\u0026quot;NLog.NLogTraceListener, NLog\u0026quot; /\u0026gt; \u0026lt;/sharedListeners\u0026gt; \u0026lt;/system.diagnostics\u0026gt; You can easily log entire objects Using ServiceStack.Text\u0026rsquo;s Dump() extension method, you can easily serialize and Dump entire objects to your log file. If you\u0026rsquo;re not already using ServiceStack.Text, you can install it easily via NuGet using the command:\nPM\u0026gt; Install-Package ServiceStack.Text Then, to log an entire object in code is as simple as\nlogger.Debug(\u0026quot;Initializing settings with object: {0}\u0026quot;, someobject.Dump()); Be careful if you have objects that reference each other \u0026ndash; you can inadvertently cause a stack overflow if you\u0026rsquo;re not careful. To work around this issue, create an anonymous object with only the properties you want to log and then call Dump() on that object.\n","permalink":"https://danesparza.github.io/2014/06/things-your-dad-never-told-you-about-nlog/","summary":"I\u0026rsquo;ve had cause to work with NLog a lot lately. In working with it, I have discovered some surprises and tricks that I thought I would share.\nLog levels matter You should think carefully about your log levels as you start adding logging to your app. Trace should probably be used sparingly, because when you turn on log level \u0026lsquo;Trace\u0026rsquo; that means you\u0026rsquo;re pretty much logging EVERYTHING. Log level Debug or Info might be a better level to start with.","title":"Things your Dad never told you about NLog"},{"content":"In a previous article, I talked about working with HttpListener. Remember: HttpListener uses http.sys. It\u0026rsquo;s necessary to tell http.sys that a process \u0026amp; user should be allowed to listen to a certain port before that process starts listening. This is called \u0026lsquo;url reservation\u0026rsquo;.\nIn Windows Vista and Windows server 2008, the way to do url reservation is with netsh.exe. My development workstation is Windows 7, so I used netsh.exe to get things working locally. And of course \u0026ndash; I thought that I could use netsh.exe anywhere I needed to use HttpListener. I was so wrong.\nOlder machines use httpcfg.exe for port reservation Much to my surprise netsh doesn\u0026rsquo;t work the same way on all machines. At my workplace we have Windows 2003 servers for QA, staging and production. I discovered (the hard way) that I can\u0026rsquo;t use netsh.exe to do my url/port reservation \u0026ndash; I have to use something called httpcfg.exe. The syntax is deceptively similar:\nhttpcfg.exe set urlacl /u http://+:9001/ /a D:(A;;GX;;;NS) Just like netsh.exe, I can specify the url/port to listen to, but the user assigned to that reservation is specified using SDDL - which is very cryptic. See that D:(A;;GX;;;NS) in the example, above? That\u0026rsquo;s actually saying \u0026lsquo;give permission to the NETWORK SERVICE user\u0026rsquo;. Yeah. Cryptic.\nTo make life a little easier and help find the SDDL representation of the NETWORK SERVICE user, I used a handy tool called HttpCfg ACL helper. That tool generates the httpcfg syntax that I needed \u0026ndash; including the SDDL.\n","permalink":"https://danesparza.github.io/2014/03/netsh-and-httpcfg/","summary":"In a previous article, I talked about working with HttpListener. Remember: HttpListener uses http.sys. It\u0026rsquo;s necessary to tell http.sys that a process \u0026amp; user should be allowed to listen to a certain port before that process starts listening. This is called \u0026lsquo;url reservation\u0026rsquo;.\nIn Windows Vista and Windows server 2008, the way to do url reservation is with netsh.exe. My development workstation is Windows 7, so I used netsh.exe to get things working locally.","title":"netsh, Windows 2003 and httpcfg"},{"content":"Dear Reader, I learned some important things the hard way this week, so I thought I\u0026rsquo;d share the fruits of my agony.\nYou must reserve ports when working with HttpListener I\u0026rsquo;m used to letting IIS handle the details of hosting a web service for me, so I wasn\u0026rsquo;t familiar with the ins and outs of netsh. If you self host with OWIN, this apparently gets taken care of for you \u0026ndash; so you don\u0026rsquo;t need to worry about it. If you self-host with ServiceStack (like I did) be aware that ServiceStack uses HttpListener.\nThe basic idea is the operating system needs to make sure a given user has permission to start listening for network requests before it\u0026rsquo;ll actually pass the network traffic to the listening application. In fact until you configure this correctly, your service will never get hit, but calls will return with a 503 error.\nFor future reference: If your Windows service needs to listen on port 9001 and it\u0026rsquo;s installed with the \u0026lsquo;Network service\u0026rsquo; account, you\u0026rsquo;ll need to run the following netsh command on the box (as an administrator, of course) before the service will actually be able to handle network requests:\nnetsh http add urlacl url=http://+:9001/ user=\u0026quot;NT AUTHORITY\\NETWORK SERVICE\u0026quot; I also had no idea that netsh was so finicky. For example, there is a significant difference between urlacl=http://+:port and urlacl=http://*:port - one reserves any untaken IPs, the other reserves all known IPs.\nYou can see what urls have already been reserved using the command netsh http show urlacl\nIf you press \u0026lsquo;install certificate\u0026rsquo; in the browser, you\u0026rsquo;re doing it wrong When viewing the certificate in the browser, if you think pressing the \u0026lsquo;install certificate\u0026rsquo; button will make your cert problems go away, you\u0026rsquo;re mistaken.\nInstead, you need to open Microsoft Management console, add the \u0026lsquo;Certificates\u0026rsquo; plugin, make sure you choose \u0026lsquo;Computer account\u0026rsquo; (in the \u0026ldquo;this snap-in will always manage certificates for\u0026rdquo; dialog) and THEN install the certificate to the \u0026lsquo;Trusted Root Certificate\u0026rsquo; store. More information on Jeff Sander\u0026rsquo;s blog.\nYou can trace network calls made with .NET automatically While reading through the certificate troubleshooting steps on Jeff Sander\u0026rsquo;s blog, I realized Jeff also walks you through turning on tracing for internal .NET network and security calls. It\u0026rsquo;s as easy as including some additional stuff in your application\u0026rsquo;s config file:\n\u0026lt;configuration\u0026gt; \u0026lt;system.diagnostics\u0026gt; \u0026lt;trace autoflush=\u0026quot;true\u0026quot; /\u0026gt; \u0026lt;sources\u0026gt; \u0026lt;source name=\u0026quot;System.Net\u0026quot;\u0026gt; \u0026lt;listeners\u0026gt; \u0026lt;add name=\u0026quot;System.Net\u0026quot;/\u0026gt; \u0026lt;/listeners\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;source name=\u0026quot;System.Net.HttpListener\u0026quot;\u0026gt; \u0026lt;listeners\u0026gt; \u0026lt;add name=\u0026quot;System.Net\u0026quot;/\u0026gt; \u0026lt;/listeners\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;source name=\u0026quot;System.Net.Sockets\u0026quot;\u0026gt; \u0026lt;listeners\u0026gt; \u0026lt;add name=\u0026quot;System.Net\u0026quot;/\u0026gt; \u0026lt;/listeners\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;source name=\u0026quot;System.Net.Cache\u0026quot;\u0026gt; \u0026lt;listeners\u0026gt; \u0026lt;add name=\u0026quot;System.Net\u0026quot;/\u0026gt; \u0026lt;/listeners\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;/sources\u0026gt; \u0026lt;sharedListeners\u0026gt; \u0026lt;add name=\u0026quot;System.Net\u0026quot; type=\u0026quot;System.Diagnostics.TextWriterTraceListener\u0026quot; initializeData=\u0026quot;System.Net.trace.log\u0026quot; traceOutputOptions = \u0026quot;ProcessId, DateTime\u0026quot;/\u0026gt; \u0026lt;/sharedListeners\u0026gt; \u0026lt;switches\u0026gt; \u0026lt;add name=\u0026quot;System.Net\u0026quot; value=\u0026quot;Verbose\u0026quot; /\u0026gt; \u0026lt;add name=\u0026quot;System.Net.Sockets\u0026quot; value=\u0026quot;Verbose\u0026quot; /\u0026gt; \u0026lt;add name=\u0026quot;System.Net.Cache\u0026quot; value=\u0026quot;Verbose\u0026quot; /\u0026gt; \u0026lt;add name=\u0026quot;System.Net.HttpListener\u0026quot; value=\u0026quot;Verbose\u0026quot; /\u0026gt; \u0026lt;/switches\u0026gt; \u0026lt;/system.diagnostics\u0026gt; \u0026lt;/configuration\u0026gt; Using this method, I was able to easily see a certificate validation error with a self-signed cert that I was using. Without it, I was flying blind.\n","permalink":"https://danesparza.github.io/2014/01/debugging-dotnet-network-and-certificate-issues/","summary":"Dear Reader, I learned some important things the hard way this week, so I thought I\u0026rsquo;d share the fruits of my agony.\nYou must reserve ports when working with HttpListener I\u0026rsquo;m used to letting IIS handle the details of hosting a web service for me, so I wasn\u0026rsquo;t familiar with the ins and outs of netsh. If you self host with OWIN, this apparently gets taken care of for you \u0026ndash; so you don\u0026rsquo;t need to worry about it.","title":"Debugging .NET network and certificate issues"},{"content":"Today I discovered an interesting \u0026lsquo;gotchya\u0026rsquo; when using HTML5 data attributes with jQuery. jQuery supports getting these data attributes with the jQuery.data() syntax \u0026hellip; but beware: it will automatically strip hyphens and camel-case hyphenated attributes.\nIn other words, if you try to use the following HTML:\n\u0026lt;div data-role=\u0026quot;page\u0026quot; data-last-value=\u0026quot;43\u0026quot; data-hidden=\u0026quot;true\u0026quot; data-options='{\u0026quot;name\u0026quot;:\u0026quot;John\u0026quot;}'\u0026gt;\u0026lt;/div\u0026gt; \u0026hellip; the data-last-value attribute automatically becomes lastValue when accessing it in jQuery.\nThis also introduces another behavior you should be aware of. You should never camel-case your own data attributes, because jQuery will never be able to access them.\nToday I had this HTML:\n\u0026lt;tr data-configId=\u0026quot;22\u0026quot;\u0026gt; ... \u0026lt;/tr\u0026gt; and I was trying to access that data attribute with the following jQuery selector:\n$(\u0026quot;tr\u0026quot;).data(\u0026quot;configId\u0026quot;) It wouldn\u0026rsquo;t find the data attribute. When I changed the data-attribute to be all lower case, everything magically worked.\n","permalink":"https://danesparza.github.io/2014/01/gotchya-using-data-attributes-with-jquery/","summary":"Today I discovered an interesting \u0026lsquo;gotchya\u0026rsquo; when using HTML5 data attributes with jQuery. jQuery supports getting these data attributes with the jQuery.data() syntax \u0026hellip; but beware: it will automatically strip hyphens and camel-case hyphenated attributes.\nIn other words, if you try to use the following HTML:\n\u0026lt;div data-role=\u0026quot;page\u0026quot; data-last-value=\u0026quot;43\u0026quot; data-hidden=\u0026quot;true\u0026quot; data-options='{\u0026quot;name\u0026quot;:\u0026quot;John\u0026quot;}'\u0026gt;\u0026lt;/div\u0026gt; \u0026hellip; the data-last-value attribute automatically becomes lastValue when accessing it in jQuery.\nThis also introduces another behavior you should be aware of.","title":"Gotchya using data attributes with jQuery"},{"content":"A few months ago, I covered how to setup a blog using S3, Cloudfront and Route 53 that was dirt cheap, reliable, and fast. Today, I\u0026rsquo;m going to walk through an even simpler and cheaper setup that is just as fast\nOverview Hugo is (still) our foundation. Hugo generates a static site based on Markdown based posts. Getting started with Hugo is a breeze \u0026ndash; it\u0026rsquo;s not as complicated as Jekyll or Octopress. Comments for each post are taken care of using Disqus.\nBecause Hugo is is a GoLang based binary, there is a single binary for each platform it runs on (including Windows). No complicated installs \u0026ndash; just download and run.\nStorage on Amazon S3 Now that you have a set of static html pages that represent your blog \u0026ndash; where to put them? For that, we\u0026rsquo;ll use Amazon\u0026rsquo;s S3 storage service. First, sign up and create an S3 bucket on AWS.\nS3 Bucket setup Setting up an Amazon S3 bucket is fairly straightforward, but there are some important things to remember:\nYour bucket name should match your website name. (For this site, my bucket name is www.danesparza.net) When setting up your bucket, under \u0026lsquo;Static website hosting\u0026rsquo; make sure it\u0026rsquo;s marked to \u0026rsquo;enable website hosting\u0026rsquo; and set your index document to index.html After the bucket is setup and you have transferred your Hugo \u0026lsquo;public\u0026rsquo; directory content to it, you should be able to navigate to it using an AWS assigned url like http://www.danesparza.net.s3-website-us-east-1.amazonaws.com (in the case of this blog).\nProtip: Automatic refresh and deploy You can automate the deployment of your Hugo blog to S3. I use the free S3 tool to automate this in a batch file.\nProtip: Store locally in Dropbox For extra awesome, store your entire blog (content/design/published site) in a Dropbox folder. Dropbox automatically keeps track of your past file versions \u0026ndash; so you can roll back to a previous version of a blog post in a pinch.\nLightning fast In order to make the static content even faster, we can automatically distribute it on a CDN. Since the entire blog is just static content at this point, it makes sense that it can be cached at several locations around the globe. To make DNS and CDN distribution super simple, setup an account on Cloudflare. Cloudflare will provide you with free tools to manage your domain\u0026rsquo;s DNS information, protect you from hacker attacks and automatically distribute your content on their content distribution network.\nTo setup your site in Cloudflare, simply create a CNAME record for your site that points www.yourdomain.com to your AWS assigned S3 bucket url.\nFor this site, that means creating a CNAME that points www to www.danesparza.net.s3-website-us-east-1.amazonaws.com\nFewer security problems than Wordpress Think about what we\u0026rsquo;ve setup now. Unless an attacker steals your S3 credentials, the site that has been setup doesn\u0026rsquo;t have any server side attack vectors because it\u0026rsquo;s all static HTML. There is nothing executing on the server side. There is nothing to exploit. This is much more secure than Wordpress\nInexpensive We\u0026rsquo;re using just 1 AWS service now. Each AWS service requires that you pay for usage. So how much money are we talking about?\nS3 pricing: Currently $.005 per 1000 requests + storage costs\nDepending on the size of your site, you\u0026rsquo;re most likely talking less than $.25/month for all of this.\nI call that inexpensive.\n","permalink":"https://danesparza.github.io/2013/11/cheaper-hosting-on-s3/","summary":"A few months ago, I covered how to setup a blog using S3, Cloudfront and Route 53 that was dirt cheap, reliable, and fast. Today, I\u0026rsquo;m going to walk through an even simpler and cheaper setup that is just as fast\nOverview Hugo is (still) our foundation. Hugo generates a static site based on Markdown based posts. Getting started with Hugo is a breeze \u0026ndash; it\u0026rsquo;s not as complicated as Jekyll or Octopress.","title":"Hosting a blog on S3 - cheaper and simpler"},{"content":"Creating a blog that is easy-to-use, lightning fast, inexpensive, has fewer security problems than Wordpress, and never has downtime might seem impossible … but I think I\u0026rsquo;ve found a way.\nEasy to use Hugo is our foundation. OK \u0026ndash; I\u0026rsquo;ll admit that Hugo isn\u0026rsquo;t exactly easy to use for a non-geek. If you already know a bit of HTML \u0026amp; Javascript, it\u0026rsquo;s a perfect fit for this operation. Hugo generates a static site based on Markdown based posts. Comments for each post are taken care of using Disqus.\nBecause Hugo is is a GoLang based binary, there is a single binary for each platform it runs on (including Windows). No complicated installs \u0026ndash; just download and run.\nGet started with Hugo.\nNever has downtime Now that you have a set of static html pages that represent your blog \u0026ndash; where to put them? For that, we\u0026rsquo;ll use Amazon\u0026rsquo;s S3 storage service. First, sign up and create an S3 bucket on AWS. When setting it up, make sure it\u0026rsquo;s marked to \u0026rsquo;enable website hosting\u0026rsquo;.\nYou can automate the deployment of your Hugo blog to S3. I use the free S3 tool to automate this in a batch file.\nAfter the bucket is setup and you have transferred your Hugo \u0026lsquo;public\u0026rsquo; directory content to it, you should be able to navigate to it using an AWS assigned url like http://danesparza.s3-website-us-east-1.amazonaws.com (in the case of this blog). Make sure that you set your document root to index.html.\nLightning fast In order to make the static content even faster, we can automatically distribute it on a CDN. Since the entire blog is just static content at this point, it makes sense that it can be cached at several locations around the globe \u0026ndash; which is what AWS Cloudfront gives you automagically.\nHere\u0026rsquo;s the trick to getting this working correctly with the site you\u0026rsquo;ve already got working in S3: When creating your Cloudfront distribution, set your Cloudfront origin to the S3 hostname. In this case, that\u0026rsquo;s danesparza.s3-website-us-east-1.amazonaws.com. Set the \u0026lsquo;alternate names\u0026rsquo; to whatever your blog hostname is. In the case of this blog, I set it to:\ndanesparza.net www.danesparza.net AWS will assign a domain name. In the case of this blog, it\u0026rsquo;s: d36829k8vm65ei.cloudfront.net. Make sure that you can access your site via this domain name before proceeding. It might take several minutes for the distribution to be deployed and for this url to be ready.\nMake sure to set a default cache behavior with a Minimum TTL (time to live) of around 43200 \u0026ndash; that will make sure that your content is cached for a minimum of 12 hours. In other words, if you make a change to your site, you wont see it go live for 12 hours. If that\u0026rsquo;s too long a time, you can adjust this TTL down. The TTL is specified in seconds.\nTo setup the root domain (in the case of this blog: danesparza.net ) you\u0026rsquo;ll need to use AWS Route 53 DNS service. See this blog article on root domain hosting for more information.\nFewer security problems than Wordpress Think about what we\u0026rsquo;ve setup now. Unless an attacker steals your S3 credentials, the site that has been setup doesn\u0026rsquo;t have any server side attack vectors because it\u0026rsquo;s all static HTML. There is nothing executing on the server side. There is nothing to exploit. This is much more secure than Wordpress\nInexpensive We\u0026rsquo;re using 2 AWS services (and possibly 3 if you opted for Route 53). Each of them require that you pay for usage. So how much money are we talking about?\nS3 pricing: Currently $.005 per 1000 requests\nCloudfront pricing: Depends on the region, but US is currently $.0075 per 10,000 requests\nRoute 53 pricing: $.50 per month per hosted zone / domain + $.50 for the first million queries)\nDepending on the size of your site, you\u0026rsquo;re talking less than $1/month for all of this.\nI call that inexpensive.\n","permalink":"https://danesparza.github.io/2013/07/hosting-a-blog-on-s3-and-cloudfront/","summary":"Creating a blog that is easy-to-use, lightning fast, inexpensive, has fewer security problems than Wordpress, and never has downtime might seem impossible … but I think I\u0026rsquo;ve found a way.\nEasy to use Hugo is our foundation. OK \u0026ndash; I\u0026rsquo;ll admit that Hugo isn\u0026rsquo;t exactly easy to use for a non-geek. If you already know a bit of HTML \u0026amp; Javascript, it\u0026rsquo;s a perfect fit for this operation. Hugo generates a static site based on Markdown based posts.","title":"Hosting a blog on S3 and Cloudfront"},{"content":"For best performance it\u0026rsquo;s usually not a good idea to initialize variables in .NET. When it comes to software maintenance costs, List initialization is a different story, however.\nI\u0026rsquo;ve seen 2 different patterns used when creating lists in C# code recently. One is simply to declare the list and implicitly or explicitly initialize it to null:\npublic List\u0026lt;SomeObject\u0026gt; MyListProperty { get; set; } // Implicitly null (Ok) List\u0026lt;SomeObject\u0026gt; MyOtherListProperty = null; // Explicitly null (Ok) The other is to declare the list and initialize it to an empty list.\nList\u0026lt;SomeObject\u0026gt; SomeList = new List\u0026lt;SomeObject\u0026gt;(); // Initialize to empty list (Better) It\u0026rsquo;s almost always better to initialize to an empty list unless your application is extremely memory sensitive (see Jon Skeet\u0026rsquo;s answer here, and understand that List uses an Array to manage data internally).\nWhen you initialize to an empty list, you eliminate null checks prior to using the list, and can immediately iterate using a foreach loop, check the .Count on the list or use methods like .Any() to see if there are items in the list.\n","permalink":"https://danesparza.github.io/2013/07/using-generic-lists-in-code/","summary":"For best performance it\u0026rsquo;s usually not a good idea to initialize variables in .NET. When it comes to software maintenance costs, List initialization is a different story, however.\nI\u0026rsquo;ve seen 2 different patterns used when creating lists in C# code recently. One is simply to declare the list and implicitly or explicitly initialize it to null:\npublic List\u0026lt;SomeObject\u0026gt; MyListProperty { get; set; } // Implicitly null (Ok) List\u0026lt;SomeObject\u0026gt; MyOtherListProperty = null; // Explicitly null (Ok) The other is to declare the list and initialize it to an empty list.","title":"Using generic lists in code"},{"content":"When looking to speed up content that will be served from an ASP.NET MVC controller, one of the options I evaluate is the built in Output caching mechanism. Output caching is great because it\u0026rsquo;s easy to setup, easy to maintain and it can give a big improvement for a small amount of code.\nSometimes, the cached item will need to be flushed (and regenerated / recached). The built in mechanisms for handling this \u0026ndash; using cache expiration, or varying the cached output by one of many parameters \u0026ndash; handle most use cases pretty easily.\nBut other times I need to expire the Output cache programatically, and it\u0026rsquo;s not entirely obvious how to do this, so I have documented it, here:\n// Get the url for the action method: var staleItem = Url.Action(\u0026quot;Action\u0026quot;, \u0026quot;YourController\u0026quot;, new { Id = model.Id, area = \u0026quot;areaname\u0026quot;; }); // Remove the item from cache Response.RemoveOutputCacheItem(staleItem); Where \u0026ldquo;Action\u0026rdquo; and \u0026ldquo;YourController\u0026rdquo; are the names of the Action method and controller that have the [OutputCache] attribute. Notice that this example also passes route data (the Id and the area \u0026ldquo;areaname\u0026rdquo;) \u0026ndash; this is how you\u0026rsquo;ll need to specify any parameters to the action method to build a complete url in Url.Action.\nNote: that you can use this code from any part of your application \u0026ndash; you can expire the output cache of one controller/method from a completely different controlller/method.\nAlso, you\u0026rsquo;ll need to remember to add the Location=OutputCacheLocation.Server parameter to the OutputCache attribute, like this:\n[OutputCache(Location=System.Web.UI.OutputCacheLocation.Server, Duration = 300, VaryByParam = \u0026quot;Id\u0026quot;)] ","permalink":"https://danesparza.github.io/2013/01/flushing-the-asp-net-output-cache-using-code/","summary":"When looking to speed up content that will be served from an ASP.NET MVC controller, one of the options I evaluate is the built in Output caching mechanism. Output caching is great because it\u0026rsquo;s easy to setup, easy to maintain and it can give a big improvement for a small amount of code.\nSometimes, the cached item will need to be flushed (and regenerated / recached). The built in mechanisms for handling this \u0026ndash; using cache expiration, or varying the cached output by one of many parameters \u0026ndash; handle most use cases pretty easily.","title":"Flushing the ASP.NET Output cache using code"},{"content":"This post is the third in a series of posts about managing a programmer job hunt (including hunting for a job in another city). You might be interested in the other parts:\nPart 1 (the initial research) Part 2 (the sanity check)\nThe job hunt itself I used 2 sources for software development jobs leads, exclusively: Dice.com \u0026amp; LinkedIn. I used to just use Dice.com - but LinkedIn has become very important for technical recruiting in my experience.\nGetting started on the job hunt itself was as simple as filling out my profile completely on both sites (both sites are completely free for job seekers).\nWhen I was ready, I\u0026hellip;\nSwitched my state in my profile from Arizona to Georgia Set my profile/resume to searchable On LinkedIn, set my interests to include finding a new job Applied to a few places on both LinkedIn and Dice that were in Georgia Set my phone number to my Google voice number I got a new Atlanta based number for Google Voice for just $10 Recruiters started calling like crazy.\nSo crazy that I had to shut off the \u0026lsquo;call through\u0026rsquo; feature of Google voice so that recruiters just left voicemail, so I could call them back when it was more convenient for me.\nI knew I had to come up with a new process\u0026hellip;\nI thought I could do several phone screens a day (ha!). I quickly went nuts. To keep my sanity, I reset my goals to do 2 phone calls a day: 1 tech screen in the morning, 1 recruiter callback at lunch. This worked MUCH better.\nProtip: Use tools like Google voice to your advantage. It worked really well having recruiters call my Google Voice number (it was set to not call through to my cell or notify me at all) and then calling them back. I was getting an average of 10-15 calls a day from recruiters. For weeks. I had to get something in place to screen calls\nProtip: Use a CRM tool. I used Highrise by 37 signals. You can manage all 3 major touchpoints of an interview:\nProtip: Get help if you can. My wife helped me by going through the Google Voice voicemail backlog and entering information into Highrise and scheduling callbacks for me.\nIf she found their information in Highrise, she\u0026rsquo;d just add a note If she didn\u0026rsquo;t find their information in Highrise, she\u0026rsquo;d add a new contact for me.\n","permalink":"https://danesparza.github.io/2012/10/managing-the-job-hunt-phone-screens/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eThis post is the third in a series of posts about managing a programmer job hunt (including hunting for a job in another city). You might be interested in the other parts:\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003ePart 1 (the initial research)\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003ePart 2 (the sanity check)\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Managing a job hunt: Part 3 (phone screens)"},{"content":"This post is the second in a series of posts about managing a programmer job hunt (including hunting for a job in another city). You might be interested in the other parts:\nPart 1 (the initial research)\nAfter the initial research We needed to save up to move. We knew that because we were moving such a long distance away, we should save up a pretty sizeable moving fund (because long distance moves are freaking expensive) We saved for an interview trip for me \u0026ndash; I was going to have to land a job somehow, and phone interviews are a good foot in the door, but they\u0026rsquo;re not going to close the deal By a stroke of genius we decided \u0026ldquo;Hey \u0026ndash; we should actually go for a week sometime way before we start the process and actually make sure we really want to go there\u0026rdquo;. This turned out to be awesome. I kept an eye on the job market (and compared to the local job market) by subscribing to Dice\u0026rsquo;s RSS feeds. Again, for a rough comparison I used the keyword \u0026ldquo;C#\u0026rdquo; for both job markets and just watched how many jobs accrued each week in each market. I was able to see that Atlanta consistently had 3-4 times as many jobs offered in a week as Phoenix did. Every week. For the entire year leading up to the move. This gave me incredible confidence when actually starting the application process. I was very open with my work as soon as we started targeting Atlanta. Not everyone\u0026rsquo;s work environment is the same. I had been working with a company that was very good to me for 8 years. I felt they deserved to know what my family\u0026rsquo;s plans were, so I kept them in the loop. I even lobbied to be able to work from home (in Atlanta) prior to starting the job seeking process (but that didn\u0026rsquo;t work out). In the end, I had incredible peace of mind leaving the company, knowing that I had effectively given them months and months of notice. The first trip out We created research packets for 5 cities around the metro area that we knew we wanted to target.\nThese packets included a \u0026rsquo;target house\u0026rsquo; on Zillow\nWithin a 10 mile radius of the house, we found:\nLocal schools Public library Grocery stores (Costco, etc) Gyms Churches Parks Restaurants After we arrived, we used Yelp on our mobile phones to find highly rated local restaurants to visit to get a sense of \u0026rsquo;local flavor'.\nThis \u0026lsquo;scouting trip\u0026rsquo; gave my wife and I a good sense of what was in each of the cities surrounding metro Atlanta, and was vital to our sanity during the move.\n","permalink":"https://danesparza.github.io/2012/10/job-hunt-sanity-check/","summary":"\u003cp\u003e\u003c!-- raw HTML omitted --\u003eThis post is the second in a series of posts about managing a programmer job hunt (including hunting for a job in another city).  You might be interested in the other parts:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://danesparza.net/2012/08/job-hunt-research/\"\u003ePart 1 (the initial research)\u003c/a\u003e\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e","title":"Managing a job hunt: Part 2 (the sanity check)"},{"content":"I recently switched jobs (and switched states) and used several approaches that I haven\u0026rsquo;t heard used anywhere else, so I wanted to share what worked and what didn\u0026rsquo;t work.\nHow do you make sure you\u0026rsquo;ll have a good fit with the weather, housing market, job market \u0026amp; culture before you actually move? Research!\nThe job market research I started with the initial job market search. I\u0026rsquo;m the primary breadwinner of my family, so it was important that I find an area of the contry that had plenty of opportunities for my skill set. I figured a good approach might be to use a job website that I trusted (Dice.com in this case), and compare the same keyword search across cities. I\u0026rsquo;m a software developer that uses C# as a \u0026lsquo;core skill\u0026rsquo; at work, so I decided to use that for my \u0026lsquo;apples to apples\u0026rsquo; search.\nFor the initial \u0026lsquo;paring down\u0026rsquo; of our list of 10-15 cities, I used a single search keyword (\u0026ldquo;C#\u0026rdquo;) on Dice and tracked the number of jobs posted in the last 30 days in several major cities that I knew my wife and I had chatted about possibly moving to. I came up with a range of 10,000+ matching jobs in New York City to 54 matching jobs in Honolulu, Hawaii. (Yes, Hawaii \u0026ndash; a guy can dream, right?)\nProtip: Automate your job market comparisons I knew we weren\u0026rsquo;t going to move any time soon (we had to save up to move!), so I wanted to be sure of my choice in job market. I was able to automatically track the job markets over the course of a year. In Dice, I tracked each search in its own RSS feed. (Not sure what RSS is? Watch a video explanation). In Google Chrome, you\u0026rsquo;ll notice that each search that you do on Dice will present itself as an RSS feed. Just subscribe to each feed and track in your favorite RSS reader \u0026ndash; mine is Google Reader.\nI was able to objectively compare my current job market with my target job market, and see that my target job market consistently had 3-4 times as my jobs!\nWeather research Climate research can be important when trying to make a decision of where to move. After all, do you really want to bake in 120 degree summers in Arizona, or shovel snow several months out of the year in Boston? My family and I decided that weather was important to us, and used AccuWeather and climate-zone.com to compare monthly weather trends in cities.\nProtip: Track year round weather trends In Accuweather, use the \u0026lsquo;month\u0026rsquo; forecast to see what the average high and low temperatures are for a given day in the target city. Here is what this looks like for Atlanta in May (be sure to check out the awesome temperature graph at the bottom of the page). To see key data averaged over every month (like precipitation data) use climate-zone. Here is climate-zone.com data for Atlanta.\nThis climate data was even a book report opportunity to enlighten my girls, 12 and 15 at the time. Using the information on these sites, we discovered Atlanta actually had more annual precipitation than Seattle, but also had more sunny days. Score one for research!\nHousing market research Our plans included buying a house in the future, so it was important that we could afford to buy a house in our target city. Our tool of choice for housing research was Zillow. Using Zillow, we quickly ruled out our first choice of Seattle, WA (mostly because you can\u0026rsquo;t get anything under $200,000 anywhere near Seattle which meant it was outside of our budget).\nSo that\u0026rsquo;s the initial research. Now what?\nStay tuned for Managing a job hunt: Part 2.\n","permalink":"https://danesparza.github.io/2012/08/job-hunt-research/","summary":"\u003cp\u003eI recently \u003c!-- raw HTML omitted --\u003eswitched jobs\u003c!-- raw HTML omitted --\u003e (and \u003c!-- raw HTML omitted --\u003eswitched states\u003c!-- raw HTML omitted --\u003e) and used several approaches that I haven\u0026rsquo;t heard used anywhere else, so I wanted to share what worked and what didn\u0026rsquo;t work.\u003c/p\u003e","title":"Managing a job hunt: Part 1 (the initial research)"},{"content":"The problem Interruptions cause a real problem with lost time during software development. Jeff Atwood summarizes this nicely:\nThe solution: taking notes We\u0026rsquo;re already using the computer to program, I figure it makes more sense to take notes on the computer (vs pen and paper). After trying to use Evernote and getting frustrated with the lack of a decent print view or formatting options, I chose MS Onenote and haven\u0026rsquo;t looked back.\nWhy Onenote? Using a template to ease your workflow Let\u0026rsquo;s face it: Note taking is tedious. Somewhere after achieving amateur note taker status, you\u0026rsquo;ll either want to give up or make life much easier for yourself somehow \u0026ndash; because taking notes on a bug every time will begin to feel very repetitive or even worse: a waste of time.\nTemplates make your life easier in MS Onenote.\nBefore creating a template, think about:\nSample template content My default bug fixing template has the following information in it (or if you already have Onenote, just download and unzip this sample):\nTips ","permalink":"https://danesparza.github.io/2012/04/using-ms-onenote-to-manage-bug-and-release-information/","summary":"\u003ch3 id=\"the-problem\"\u003eThe problem\u003c/h3\u003e\n\u003cp\u003eInterruptions \u003c!-- raw HTML omitted --\u003ecause a real problem with lost time\u003c!-- raw HTML omitted --\u003e during software development. \u003c!-- raw HTML omitted --\u003eJeff Atwood\u003c!-- raw HTML omitted --\u003e summarizes this nicely:\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch3 id=\"the-solution-taking-notes\"\u003eThe solution: taking notes\u003c/h3\u003e\n\u003cp\u003eWe\u0026rsquo;re already using the computer to program, I figure it makes more sense to take notes on the computer (vs pen and paper). After trying to use Evernote and getting frustrated with the lack of a decent print view or formatting options, I chose \u003c!-- raw HTML omitted --\u003eMS Onenote\u003c!-- raw HTML omitted --\u003e and haven\u0026rsquo;t looked back.\u003c/p\u003e","title":"Using MS Onenote to manage bug and release information"},{"content":"I\u0026rsquo;ve been using the awesome \u0026lsquo;git\u0026rsquo; source code control system for the past year now. The transition from Subversion to git was prompted mostly by my desire to use the awesome application hosting platform AppHarbor, but I picked up git with ease and haven\u0026rsquo;t looked back.\nOne of the things I\u0026rsquo;ve learned about using git in conjunction with Visual Studio 2010 is that git usually likes to be in control of certain operations. In particular, git likes to be in control of \u0026lsquo;remove\u0026rsquo; operations.\nRemoving a file from git is as simple as running\nrm filepath/filename.ext from the git command line, but when that is a long path and filename, it can get a bit \u0026hellip; tedious.\nLuckily, there are a few quick tips I can share when using the git commandline:\nFirst, the tab key provides command-line completion, just like in a Linux \u0026lsquo;bash\u0026rsquo; prompt.\nSecond (and perhaps even more awesome) \u0026ndash; you can use bash (or even DOS-style) wildcards for the filename!\nThis means that you can easily use the following syntax:\nrm MyApp.Library/Some/Really/Long/Path/MyLongFile*.* How cool is that!?\nSite note: If you\u0026rsquo;re learning git (or just want a nice desk companion for Git) you can\u0026rsquo;t go wrong with this book:\nPro Git\n","permalink":"https://danesparza.github.io/2012/01/using-wildcards-with-git-operations/","summary":"I\u0026rsquo;ve been using the awesome \u0026lsquo;git\u0026rsquo; source code control system for the past year now. The transition from Subversion to git was prompted mostly by my desire to use the awesome application hosting platform AppHarbor, but I picked up git with ease and haven\u0026rsquo;t looked back.\nOne of the things I\u0026rsquo;ve learned about using git in conjunction with Visual Studio 2010 is that git usually likes to be in control of certain operations.","title":"Using wildcards with git operations"},{"content":"To quickly find the version of jQuery that a site is using, you can simply type the following into the browser bar of the site:\njavascript:alert(jQuery.fn.jquery) This will get the version of jQuery and display it in a javascript pop-up dialog.\n","permalink":"https://danesparza.github.io/2012/01/what-version-of-jquery-is-a-site-using/","summary":"To quickly find the version of jQuery that a site is using, you can simply type the following into the browser bar of the site:\njavascript:alert(jQuery.fn.jquery) This will get the version of jQuery and display it in a javascript pop-up dialog.","title":"What version of jQuery is a site using?"},{"content":"I recently discovered an ingeniously simple way to see if 2 date ranges overlap using only Javascript:\nvar e1start = e1.start.getTime(); var e1end = e1.end.getTime(); var e2start = e2.start.getTime(); var e2end = e2.end.getTime(); return (e1start \u0026gt; e2start \u0026amp;\u0026amp; e1start \u0026lt; e2end || e2start \u0026gt; e1start \u0026amp;\u0026amp; e2start \u0026lt; e1end); Simple, eh?\nOne more quick note: ff you need extra help with designing your app with Javascript, you can\u0026rsquo;t go wrong with this fantastic book from Douglas Crockford:\nJavaScript: The Good Parts\n","permalink":"https://danesparza.github.io/2011/07/find-out-if-2-date-ranges-overlap-using-javascript/","summary":"I recently discovered an ingeniously simple way to see if 2 date ranges overlap using only Javascript:\nvar e1start = e1.start.getTime(); var e1end = e1.end.getTime(); var e2start = e2.start.getTime(); var e2end = e2.end.getTime(); return (e1start \u0026gt; e2start \u0026amp;\u0026amp; e1start \u0026lt; e2end || e2start \u0026gt; e1start \u0026amp;\u0026amp; e2start \u0026lt; e1end); Simple, eh?\nOne more quick note: ff you need extra help with designing your app with Javascript, you can\u0026rsquo;t go wrong with this fantastic book from Douglas Crockford:","title":"Find out if 2 date ranges overlap using Javascript"},{"content":"I just spent the last hour trying to debug some Javascript code that wasn\u0026rsquo;t working the way I expected. It turns out I was dealing with the shallow copying behavior of Javascript. If you deal in Javascript objects regularly, you need to know this information!\nHere is a quick example that illustrates what I saw while debugging today:\n// First object, with a simple string property args1 = {}; args1.test1 = \u0026quot;blah\u0026quot;; // Second object, 'created' from the first args2 = args1; // As you might expect... // args2.test1 is \u0026quot;blah\u0026quot; // Set the property to something different // on the second object args2.test1 = \u0026quot;boo!\u0026quot;; // But wait -- the objects are linked! // args1.test1 is now \u0026quot;boo!\u0026quot; too! As you can see \u0026ndash; the two objects ended up being \u0026rsquo;linked\u0026rsquo; to each other due to the nature of how Javascript \u0026lsquo;shallow copies\u0026rsquo; work with objects.\nSpotting this in your code is the hard part. The way to work around this is simple (as long as you\u0026rsquo;re using jQuery):\n// First object, with a simple string property args1 = {}; args1.test1 = \u0026quot;blah\u0026quot;; // Second object, deep copied from the first args3 = $.extend(true, {}, args1) // As you might expect... // args3.test1 is \u0026quot;blah\u0026quot; // Set the property to something different // on the second object args3.test1 = \u0026quot;boo!\u0026quot;; // The objects are not linked // args1.test1 is \u0026quot;blah\u0026quot; For more information, see this answer on StackOverflow (by John Resig himself).\n","permalink":"https://danesparza.github.io/2011/07/fun-with-javascript-pointers/","summary":"I just spent the last hour trying to debug some Javascript code that wasn\u0026rsquo;t working the way I expected. It turns out I was dealing with the shallow copying behavior of Javascript. If you deal in Javascript objects regularly, you need to know this information!\nHere is a quick example that illustrates what I saw while debugging today:\n// First object, with a simple string property args1 = {}; args1.test1 = \u0026quot;blah\u0026quot;; // Second object, 'created' from the first args2 = args1; // As you might expect.","title":"Fun with Javascript pointers"},{"content":"Using the free and excellent service Remember the Milk as your tasklist is great \u0026ndash; but sometimes you need a nice simple tasklist you can keep close at hand on your desktop.\nIf you use Google Chrome as your browser, there is a very easy way to do this.\nIn Chrome, visit:\nhttp://www.rememberthemilk.com/services/modules/googleig/\n(this should bring up your task list in Remember the Milk in a tiny view)\nThen in Chrome, select the \u0026lsquo;wrench\u0026rsquo; icon, select \u0026lsquo;Tools\u0026rsquo;, and then select \u0026lsquo;Create Application Shortcuts\u0026rsquo;. The next screen to come up will ask you where you\u0026rsquo;d like to launch your tasklist from.\nPress \u0026lsquo;create\u0026rsquo; and you\u0026rsquo;re all done!\n","permalink":"https://danesparza.github.io/2011/06/using-remember-the-milk-as-a-desktop-task-list/","summary":"Using the free and excellent service Remember the Milk as your tasklist is great \u0026ndash; but sometimes you need a nice simple tasklist you can keep close at hand on your desktop.\nIf you use Google Chrome as your browser, there is a very easy way to do this.\nIn Chrome, visit:\nhttp://www.rememberthemilk.com/services/modules/googleig/\n(this should bring up your task list in Remember the Milk in a tiny view)\nThen in Chrome, select the \u0026lsquo;wrench\u0026rsquo; icon, select \u0026lsquo;Tools\u0026rsquo;, and then select \u0026lsquo;Create Application Shortcuts\u0026rsquo;.","title":"Using Remember the Milk as a desktop task list"},{"content":"Unit testing with collections can be tricky, especially when you\u0026rsquo;re trying to compare collections. Enter the lowly \u0026lsquo;CollectionAssert\u0026rsquo; class in C#:\n// Assert: // 1.) These items are not null // 2.) These items are of type MyClass // 3.) The expected collection is the same as the actual collection CollectionAssert.AllItemsAreNotNull(actual); CollectionAssert.AllItemsAreInstancesOfType(actual, typeof(MyClass)); CollectionAssert.AreEqual(expected, actual); // Also: // 4.) The collection we expect to be filled shouldn't be the same as the empty one // 5.) The expected empty collection should be the same as the actual empty one CollectionAssert.AreNotEqual(expected, actualEmpty); CollectionAssert.AreEqual(expectedEmpty, actualEmpty); ","permalink":"https://danesparza.github.io/2011/06/using-the-collectionassert-class-in-a-c-unit-test/","summary":"Unit testing with collections can be tricky, especially when you\u0026rsquo;re trying to compare collections. Enter the lowly \u0026lsquo;CollectionAssert\u0026rsquo; class in C#:\n// Assert: // 1.) These items are not null // 2.) These items are of type MyClass // 3.) The expected collection is the same as the actual collection CollectionAssert.AllItemsAreNotNull(actual); CollectionAssert.AllItemsAreInstancesOfType(actual, typeof(MyClass)); CollectionAssert.AreEqual(expected, actual); // Also: // 4.) The collection we expect to be filled shouldn't be the same as the empty one // 5.","title":"Using the CollectionAssert class in a C# unit test"},{"content":"Here is a great presentation on the Chrome developer tools by Paul Irish and Pavel Feldman. PDF notes available from Google. A delightful Chrome Developer tools cheatsheet is also available in PDF and PNG formats from Paul\u0026rsquo;s colleague Boris Smus.\nGeneral info Chrome developer tools are roughly equivalent to Firebug in Firefox (but with some newly added cool features). Dev tools are actually made out of CSS / Javascript / etc themselves! Styling control and CSS manipulation Chrome keeps track of in-browser changes to the stylesheet (even has version control). In the developer version of the browser you can easily save your new stylesheet by right clicking on the stylesheet in \u0026lsquo;resources\u0026rsquo; in Chrome and selecting \u0026lsquo;Save as\u0026rsquo; You have full control of formatting in the style editor now too \u0026ndash; works closer to a full editor in the browser. Network interaction In Chrome, you can get raw request/response/cookies information sent for each request in a page You can also see an individual item\u0026rsquo;s timing information (dns lookup / wait / transfer / etc) You see a consolidated timeline All of this information comes from the Chrome network stack Console API There is more than just console.log (and you can pass lots of parameters to console.log, too) dir(node) gives you the DOM properties of the passed node inspect(node) jumps to the element pane, with the passed element selected $0 (in the console) refers to whatever element is currently selected in the \u0026rsquo;element\u0026rsquo; pane - this is useful to execute script against the selected element The copy(text) method can copy text to the clipboard for you. You can actually copy($0.innerHTML) to copy the selected element\u0026rsquo;s body text to the clipboard. Script debugging You can use the debugger with breakpoints (just like you might use Visual Studio or Firebug) You can also reveal an element in the \u0026rsquo;elements\u0026rsquo; pane, right click on the element in the pane and select \u0026lsquo;break on subtree modifications\u0026rsquo;. (Holy crap this is useful for debugging things you\u0026rsquo;re unfamiliar with!) Be sure to use the call stack information in the developer tools with this one. The first item you\u0026rsquo;re likely to see when using jQuery is some jQuery innards \u0026ndash; but go further up the call stack and you\u0026rsquo;re likely to see what code is causing that bit of HTML to get modified. Also: check the user friendly message in the scripts panel that indicates why execution was paused \u0026ndash; it\u0026rsquo;ll tell you exactly what element was modified. You can also break on various DOM events (see the \u0026lsquo;Event Listener Breakpoints\u0026rsquo; panel in \u0026lsquo;scripts\u0026rsquo;). Useful for debugging timers \u0026amp; keyboard event bugs \u0026ndash; when you only know the type of event that might be triggering something. You can also explore page script innards using the \u0026rsquo;timeline\u0026rsquo; pane - you can click on items in the left side of the timeline page and go to the line of code that triggered that part of the timeline in the scripts page. Just like the style changes, you can make script changes directly in the scripts panel almost like a nice script IDE. You can get nicely formatted code by pressing a tiny button in the bottom of the scripts panel (developer build only). You can still use breakpoints after the code is reformatted. ","permalink":"https://danesparza.github.io/2011/06/a-re-introduction-to-the-chrome-dev-tools/","summary":"\u003cp\u003eHere is a great presentation on the Chrome developer tools by \u003c!-- raw HTML omitted --\u003ePaul Irish\u003c!-- raw HTML omitted --\u003e and \u003c!-- raw HTML omitted --\u003ePavel Feldman\u003c!-- raw HTML omitted --\u003e.  PDF notes \u003c!-- raw HTML omitted --\u003eavailable from Google\u003c!-- raw HTML omitted --\u003e.  A delightful Chrome Developer tools cheatsheet is also available in \u003c!-- raw HTML omitted --\u003ePDF\u003c!-- raw HTML omitted --\u003e and \u003c!-- raw HTML omitted --\u003ePNG\u003c!-- raw HTML omitted --\u003e formats from Paul\u0026rsquo;s colleague \u003c!-- raw HTML omitted --\u003eBoris Smus\u003c!-- raw HTML omitted --\u003e.\u003c/p\u003e","title":"A re-introduction to the Chrome dev tools"},{"content":"Sometimes as a developer, it\u0026rsquo;s necessary to setup a website on your local IIS system to use NTLM or Windows based authentication. In an effort to make things a bit more secure in the OS, Microsoft has also made things a bit more difficult for developers when trying to setup NTLM locally for a specific website.\nIf you find yourself getting a 401.1 error after configuring a local website to use Windows based authentication, follow the directions here and use option 1 if you can.\n","permalink":"https://danesparza.github.io/2011/06/getting-a-401-1-error-when-using-iis-and-ntlm-security/","summary":"Sometimes as a developer, it\u0026rsquo;s necessary to setup a website on your local IIS system to use NTLM or Windows based authentication. In an effort to make things a bit more secure in the OS, Microsoft has also made things a bit more difficult for developers when trying to setup NTLM locally for a specific website.\nIf you find yourself getting a 401.1 error after configuring a local website to use Windows based authentication, follow the directions here and use option 1 if you can.","title":"Getting a 401.1 error when using IIS and NTLM security"},{"content":"For personal projects or (even not so personal projects) using Google\u0026rsquo;s CDN hosted jQuery libraries is a no brainer. But what happens when you need a plan B? Or what happens when you realize that you need to have a fallback plan just in case Google is banned in a country where you have website visitors?\nWell, the answer is a pretty neat trick I just learned. Taking advantage of the fact that Javascript is loaded synchronously \u0026ndash; you can have a set of script tags that look like this:\n\u0026lt;script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;//ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; window.jQuery || document.write(\u0026quot;\u0026lt;script src='/scripts/jquery-1.6.1.min.js'\u0026gt;\\x3C/script\u0026gt;\u0026quot;) \u0026lt;/script\u0026gt; Don\u0026rsquo;t forget YSlow guidance that says you should put your script tags near the bottom of your page!\n","permalink":"https://danesparza.github.io/2011/06/using-jquery-on-googles-cdn-but-having-a-plan-b/","summary":"For personal projects or (even not so personal projects) using Google\u0026rsquo;s CDN hosted jQuery libraries is a no brainer. But what happens when you need a plan B? Or what happens when you realize that you need to have a fallback plan just in case Google is banned in a country where you have website visitors?\nWell, the answer is a pretty neat trick I just learned. Taking advantage of the fact that Javascript is loaded synchronously \u0026ndash; you can have a set of script tags that look like this:","title":"Using jQuery on Google's CDN but having a plan B"},{"content":"Traditionally, nslookup is the tool of choice when trying to find out information about IP addresses or DNS information in Windows. In the Linux world, nslookup has been deprecated for a long time. The preferred way to query for dns information from the command line is the Domain Information Groper or \u0026lsquo;dig\u0026rsquo; dns tool.\nInterested in learning more about DNS and dig? Check out this book:\nWhat can you do with dig? Using dig, you can find out what a particular dns server thinks the given host\u0026rsquo;s IP address should be, including a lot of other information that is also very helpful. For example, running this command:\ndig www.cagedtornado.com Results in a whole host of information coming back:\n; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.8.0-P1 \u0026lt;\u0026lt;\u0026gt;\u0026gt; www.cagedtornado.com ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 15102 ;; flags: qr rd ra; QUERY: 1, ANSWER: 10, AUTHORITY: 0, ADDITIONAL: 0 ;; QUESTION SECTION: ;www.cagedtornado.com. IN A ;; ANSWER SECTION: www.cagedtornado.com. 3600 IN CNAME d1go1kcsby4lr.cloudfront.net. d1go1kcsby4lr.cloudfront.net. 60 IN CNAME d1go1kcsby4lr.sfo4.cloudfront.net. d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.65 d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.55 d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.68 d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.32 d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.53 d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.11 d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.209 d1go1kcsby4lr.sfo4.cloudfront.net. 60 IN A 216.137.37.31 ;; Query time: 210 msec ;; SERVER: 192.168.0.1#53(192.168.0.1) ;; WHEN: Tue May 17 07:58:01 2011 ;; MSG SIZE rcvd: 241 Note that the information returned includes a summary section at the top, and includes feedback on whether or not the query had an answer, and how many answers were returned. I\u0026rsquo;ll explain what each of these sections means in a bit.\nInstalling dig on windows 7 Installing dig on Windows 7 is as simple as going to ISC\u0026rsquo;s BIND site and downloading the Windows distribution. Unzip into your directory of choice.\nWhen running dig.exe for the first time, you may get the following error message:\nThe application has failed to start because its side-by-side configuration is incorrect. Please see the application event log or use the command-line sxstrace.exe tool for more detail.\nIf you see this message, it\u0026rsquo;s most likely that dig is trying to use the VC80 CRT restributable, and it\u0026rsquo;s not installed yet on your system. (You can check the application event log to make sure). If that\u0026rsquo;s the case, just run the file vcredist_x86.exe, included in the distribution. For more information on what this error message is all about, you can check out this blog post from Junfeng Zhang.\nUsing dig on Windows 7 Using dig, you can see what a specific DNS server thinks an address should be:\ndig @ns1.google.com www.google.com ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.8.0-P1 \u0026lt;\u0026lt;\u0026gt;\u0026gt; @ns1.google.com www.google.com ; (1 server found) ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 30428 ;; flags: qr aa rd; QUERY: 1, ANSWER: 6, AUTHORITY: 0, ADDITIONAL: 0 ;; WARNING: recursion requested but not available ;; QUESTION SECTION: ;www.google.com. IN A ;; ANSWER SECTION: www.google.com. 604800 IN CNAME www.l.google.com. www.l.google.com. 300 IN A 74.125.224.50 www.l.google.com. 300 IN A 74.125.224.49 www.l.google.com. 300 IN A 74.125.224.48 www.l.google.com. 300 IN A 74.125.224.51 www.l.google.com. 300 IN A 74.125.224.52 ;; Query time: 74 msec ;; SERVER: 216.239.32.10#53(216.239.32.10) ;; WHEN: Tue May 17 16:56:54 2011 ;; MSG SIZE rcvd: 132 You can do a reverse lookup (which means to take an IP address and find its fully qualified host name):\ndig -x 97.74.104.201 ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.8.0-P1 \u0026lt;\u0026lt;\u0026gt;\u0026gt; -x 97.74.104.201 ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 24181 ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 3, ADDITIONAL: 2 ;; QUESTION SECTION: ;201.104.74.97.in-addr.arpa. IN PTR ;; ANSWER SECTION: 201.104.74.97.in-addr.arpa. 3600 IN PTR corpweb-v101.prod.mesa1.secureserver.net. ;; AUTHORITY SECTION: 74.97.in-addr.arpa. 3600 IN NS cns3.secureserver.net. 74.97.in-addr.arpa. 3600 IN NS cns2.secureserver.net. 74.97.in-addr.arpa. 3600 IN NS cns1.secureserver.net. ;; ADDITIONAL SECTION: cns1.secureserver.net. 3477 IN A 208.109.255.100 cns2.secureserver.net. 3477 IN A 216.69.185.100 ;; Query time: 28 msec ;; SERVER: 172.31.250.11#53(172.31.250.11) ;; WHEN: Tue May 17 16:58:53 2011 ;; MSG SIZE rcvd: 187 You can find a domain\u0026rsquo;s mail servers:\ndig yahoo.com MX ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.8.0-P1 \u0026lt;\u0026lt;\u0026gt;\u0026gt; yahoo.com MX ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 23047 ;; flags: qr rd ra; QUERY: 1, ANSWER: 13, AUTHORITY: 7, ADDITIONAL: 7 ;; QUESTION SECTION: ;yahoo.com. IN MX ;; ANSWER SECTION: yahoo.com. 1800 IN MX 1 l.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 m.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 n.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 a.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 b.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 d.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 e.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 f.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 g.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 h.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 i.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 j.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 k.mx.mail.yahoo.com. ;; AUTHORITY SECTION: yahoo.com. 5014 IN NS ns5.yahoo.com. yahoo.com. 5014 IN NS ns2.yahoo.com. yahoo.com. 5014 IN NS ns8.yahoo.com. yahoo.com. 5014 IN NS ns1.yahoo.com. yahoo.com. 5014 IN NS ns3.yahoo.com. yahoo.com. 5014 IN NS ns6.yahoo.com. yahoo.com. 5014 IN NS ns4.yahoo.com. ;; ADDITIONAL SECTION: a.mx.mail.yahoo.com. 1800 IN A 67.195.168.31 b.mx.mail.yahoo.com. 1800 IN A 74.6.136.65 d.mx.mail.yahoo.com. 1800 IN A 209.191.88.254 e.mx.mail.yahoo.com. 1800 IN A 67.195.168.230 f.mx.mail.yahoo.com. 1800 IN A 98.137.54.237 g.mx.mail.yahoo.com. 1800 IN A 98.137.54.238 h.mx.mail.yahoo.com. 1800 IN A 66.94.236.34 ;; Query time: 29 msec ;; SERVER: 172.31.250.11#53(172.31.250.11) ;; WHEN: Tue May 17 17:04:50 2011 ;; MSG SIZE rcvd: 507 Understanding the output Dig\u0026rsquo;s output typically has 5 sections:\nHeader section Here, dig tells us its version number, the query it just got sent, and a summary of the information it got back. Pay close attention to the numbers beside query, answer, and authority: These describe the number of queries dig processed, the number of answers it got back (this might be 0 for items that don\u0026rsquo;t exist), and the number of authoritive answers it got back. If a DNS server is the primary or secondary nameserver for a given domain, it can return authoritive answers.\n; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.8.0-P1 \u0026lt;\u0026lt;\u0026gt;\u0026gt; yahoo.com MX ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 23047 ;; flags: qr rd ra; QUERY: 1, ANSWER: 13, AUTHORITY: 7, ADDITIONAL: 7 Question section Pretty self explanatory. Here, dig describes in detail what it\u0026rsquo;s looking for.\n;; QUESTION SECTION: ;yahoo.com. IN MX Answer section Here, dig tells you what its found, including TTL information for each of the items. It looks something like this:\n;; ANSWER SECTION: yahoo.com. 1800 IN MX 1 l.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 m.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 n.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 a.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 b.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 d.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 e.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 f.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 g.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 h.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 i.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 j.mx.mail.yahoo.com. yahoo.com. 1800 IN MX 1 k.mx.mail.yahoo.com. Authority section The authority section tells us what DNS servers can provide an authoritative answer to our query. In this example, isc.org has three name servers. You can toggle this section of the output using the +[no]authority option.\n;; AUTHORITY SECTION: yahoo.com. 5014 IN NS ns5.yahoo.com. yahoo.com. 5014 IN NS ns2.yahoo.com. yahoo.com. 5014 IN NS ns8.yahoo.com. yahoo.com. 5014 IN NS ns1.yahoo.com. yahoo.com. 5014 IN NS ns3.yahoo.com. yahoo.com. 5014 IN NS ns6.yahoo.com. yahoo.com. 5014 IN NS ns4.yahoo.com. Additional section If dig gets any additional information back, it will appear here. This section of the output can be toggled with the +[no]additional option.\n;; ADDITIONAL SECTION: a.mx.mail.yahoo.com. 1800 IN A 67.195.168.31 b.mx.mail.yahoo.com. 1800 IN A 74.6.136.65 d.mx.mail.yahoo.com. 1800 IN A 209.191.88.254 e.mx.mail.yahoo.com. 1800 IN A 67.195.168.230 f.mx.mail.yahoo.com. 1800 IN A 98.137.54.237 g.mx.mail.yahoo.com. 1800 IN A 98.137.54.238 h.mx.mail.yahoo.com. 1800 IN A 66.94.236.34 ","permalink":"https://danesparza.github.io/2011/05/using-the-dig-dns-tool-on-windows-7/","summary":"\u003cp\u003eTraditionally, nslookup is the tool of choice when trying to find out information about IP addresses or DNS information in Windows. In the Linux world, nslookup \u003c!-- raw HTML omitted --\u003ehas been deprecated\u003c!-- raw HTML omitted --\u003e for a long time. The preferred way to query for dns information from the command line is the \u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003eDomain Information Groper\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e or \u0026lsquo;\u003c!-- raw HTML omitted --\u003edig\u003c!-- raw HTML omitted --\u003e\u0026rsquo; dns tool.\u003c/p\u003e\n\u003cp\u003eInterested in learning more about DNS and dig? Check out this book:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.amazon.com/gp/product/0596100574/ref=as_li_ss_il?ie=UTF8\u0026amp;camp=1789\u0026amp;creative=390957\u0026amp;creativeASIN=0596100574\u0026amp;linkCode=as2\u0026amp;tag=theblogofdane-20\"\u003e\u003cimg loading=\"lazy\" src=\"/img/dns_bind.jpg\" alt=\"Alt text\"  /\u003e\n\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"what-can-you-do-with-dig\"\u003eWhat can you do with dig?\u003c/h3\u003e\n\u003cp\u003eUsing dig, you can find out what a particular dns server thinks the given host\u0026rsquo;s IP address should be, including a lot of other information that is also very helpful.  For example, running this command:\u003c/p\u003e","title":"Using the dig dns tool on Windows 7"},{"content":"Sometimes it\u0026rsquo;s useful to perform an action on more than one item on the page at the same time - like when hiding or showing a series of elements all at the same time. With jQuery selector syntax, this is very easy. First, if you\u0026rsquo;re not familiar with basic CSS or jQuery selectors, you should probably start there. Once you\u0026rsquo;re familiar with that basic syntax however, you\u0026rsquo;ll be happy to know you can combine selectors with a comma (using the \u0026lsquo;multiple selector\u0026rsquo; syntax), like this:\n$(\u0026quot;#itemone, #itemtwo\u0026quot;).hide(); $(\u0026quot;#itemthree, #itemfour\u0026quot;).show(); ","permalink":"https://danesparza.github.io/2011/01/jquery-tip-operate-on-more-than-one-item-at-the-same-time/","summary":"Sometimes it\u0026rsquo;s useful to perform an action on more than one item on the page at the same time - like when hiding or showing a series of elements all at the same time. With jQuery selector syntax, this is very easy. First, if you\u0026rsquo;re not familiar with basic CSS or jQuery selectors, you should probably start there. Once you\u0026rsquo;re familiar with that basic syntax however, you\u0026rsquo;ll be happy to know you can combine selectors with a comma (using the \u0026lsquo;multiple selector\u0026rsquo; syntax), like this:","title":"jQuery tip:  Operate on more than one item at the same time"},{"content":"Including profile pictures in your application from the nifty (and free!) gravatar service is very easy, assuming you\u0026rsquo;ve already got an \u0026rsquo;email\u0026rsquo; field for your users that you\u0026rsquo;re tracking.\nTo use the system, you just need to form a url that points to the user\u0026rsquo;s profile image (using a hash of their email address) and use that url in an image tag. The url looks something like this:\nFormat: http://www.gravatar.com/avatar/{md5 hash}\nExample: http://www.gravatar.com/avatar/73543542128f5a067ffc34305eefe48a\nThe basics But how do you create the MD5 hash of the email address? No problem. You can use .NET\u0026rsquo;s built-in crytography libraries to help you. Here is a nice helper function that takes an email address and forms the hash you\u0026rsquo;ll need in the gravatar url:\nusing System.Security.Cryptography;\n/// Hashes an email with MD5. Suitable for use with Gravatar profile /// image urls public static string HashEmailForGravatar(string email) { // Create a new instance of the MD5CryptoServiceProvider object. MD5 md5Hasher = MD5.Create(); // Convert the input string to a byte array and compute the hash. byte[] data = md5Hasher.ComputeHash(Encoding.Default.GetBytes(email)); // Create a new Stringbuilder to collect the bytes // and create a string. StringBuilder sBuilder = new StringBuilder(); // Loop through each byte of the hashed data // and format each one as a hexadecimal string. for(int i = 0; i \u0026lt; data.Length; i++) { sBuilder.Append(data[i].ToString(\u0026quot;x2\u0026quot;)); } return sBuilder.ToString(); // Return the hexadecimal string. } Using the returned hash in the url is very simple. Just place the formatted url into an image tag:\n// Compute the hash string hash = HashEmailForGravatar(email); // Assemble the url and return return string.Format(\u0026quot;http://www.gravatar.com/avatar/{0}\u0026quot;, hash); Customizing the output Pass the \u0026lsquo;size\u0026rsquo; querystring parameter if you don\u0026rsquo;t want to use the default image size of 80px by 80px.\nhttp://www.gravatar.com/avatar/73543542128f5a067ffc34305eefe48a?size=56 http://www.gravatar.com/avatar/73543542128f5a067ffc34305eefe48a?size=120 One last tip: If the hashed email address can\u0026rsquo;t be found, the following (unattractive) image will be displayed as a placeholder:\nBut you can pass in your own image to be used as a default, instead:\nhttp://www.gravatar.com/avatar/73543542128f5a067ffc34305eefe48b?d=http://media.tumblr.com/tumblr_lak5phfeXz1qzqijq.png ","permalink":"https://danesparza.github.io/2010/10/using-gravatar-images-with-c-asp-net/","summary":"\u003cp\u003eIncluding profile pictures in your application from the nifty (and free!) \u003c!-- raw HTML omitted --\u003egravatar\u003c!-- raw HTML omitted --\u003e service is very easy, assuming you\u0026rsquo;ve already got an \u0026rsquo;email\u0026rsquo; field for your users that you\u0026rsquo;re tracking.\u003c/p\u003e\n\u003cp\u003eTo use the system, you just need to form a url that points to the user\u0026rsquo;s profile image (using a hash of their email address) and use that url in an image tag.  The url looks something like this:\u003c/p\u003e\n\u003cp\u003eFormat:\n\u003ca href=\"http://www.gravatar.com/avatar/%7Bmd5\"\u003ehttp://www.gravatar.com/avatar/{md5\u003c/a\u003e hash}\u003c/p\u003e\n\u003cp\u003eExample:\n\u003ca href=\"http://www.gravatar.com/avatar/73543542128f5a067ffc34305eefe48a\"\u003ehttp://www.gravatar.com/avatar/73543542128f5a067ffc34305eefe48a\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"the-basics\"\u003eThe basics\u003c/h3\u003e\n\u003cp\u003eBut how do you create the MD5 hash of the email address?  No problem.  You can use .NET\u0026rsquo;s built-in crytography libraries to help you.  Here is a nice helper function that takes an email address and forms the hash you\u0026rsquo;ll need in the gravatar url:\u003c/p\u003e","title":"Using Gravatar images with C# / ASP.NET"},{"content":" \u0026lt;div id=\u0026quot;content\u0026quot; style=\u0026quot;padding: 10px;\u0026quot;\u0026gt; \u0026lt;form id=\u0026quot;frmTest\u0026quot; method=\u0026quot;get\u0026quot;\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; \u0026lt;input id=\u0026quot;txtEmail\u0026quot; name=\u0026quot;txtEmail\u0026quot; type=\u0026quot;text\u0026quot; class=\u0026quot;required email\u0026quot;/\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;input id=\u0026quot;txtName\u0026quot; name=\u0026quot;txtName\u0026quot; type=\u0026quot;text\u0026quot; class=\u0026quot;required\u0026quot; minlength=\u0026quot;2\u0026quot;/\u0026gt; \u0026lt;br /\u0026gt; Other content \u0026lt;br /\u0026gt; \u0026lt;button id=\u0026quot;btnValidate\u0026quot; type=\u0026quot;button\u0026quot;\u0026gt;Test validation\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; label.invalid { color: Red; font-style: italic; padding: 1px; margin: 0px 0px 0px 5px; } $(document).ready(function () { // Bind validation rules $(\u0026quot;#frmTest\u0026quot;).validate({ errorClass: \u0026quot;invalid\u0026quot; }); // Bind click handler: $(\u0026quot;#btnValidate\u0026quot;).click(function () { if ($(\u0026quot;#frmTest\u0026quot;).valid()) alert(\u0026quot;Valid\u0026quot;); }); }); If you need extra help with designing your app with Javascript, you can\u0026rsquo;t go wrong with this fantastic book from Douglas Crockford:\nJavaScript: The Good Parts\n","permalink":"https://danesparza.github.io/2010/10/tips-for-using-jquery-validation/","summary":"\u0026lt;div id=\u0026quot;content\u0026quot; style=\u0026quot;padding: 10px;\u0026quot;\u0026gt; \u0026lt;form id=\u0026quot;frmTest\u0026quot; method=\u0026quot;get\u0026quot;\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; Lots of other content here\u0026lt;br /\u0026gt; \u0026lt;input id=\u0026quot;txtEmail\u0026quot; name=\u0026quot;txtEmail\u0026quot; type=\u0026quot;text\u0026quot; class=\u0026quot;required email\u0026quot;/\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;input id=\u0026quot;txtName\u0026quot; name=\u0026quot;txtName\u0026quot; type=\u0026quot;text\u0026quot; class=\u0026quot;required\u0026quot; minlength=\u0026quot;2\u0026quot;/\u0026gt; \u0026lt;br /\u0026gt; Other content \u0026lt;br /\u0026gt; \u0026lt;button id=\u0026quot;btnValidate\u0026quot; type=\u0026quot;button\u0026quot;\u0026gt;Test validation\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; label.","title":"Tips for using jQuery validation"},{"content":" /Date(1224043200000)/ var date = new Date(parseInt(jsonDate.substr(6))); date.toDateString(); ","permalink":"https://danesparza.github.io/2010/09/working-with-json-dates-in-javascript/","summary":" /Date(1224043200000)/ var date = new Date(parseInt(jsonDate.substr(6))); date.toDateString(); ","title":"Working with JSON dates in Javascript"},{"content":"HTML 5 includes a significant bump in what the browser itself can store (up from 4k for total cookie storage to something on the order of 5-10mb). Here\u0026rsquo;s a simple code sample that illustrates how to access local storage in HTML5:\n// First, make sure our browser supports HTML 5 local storage if (typeof(localStorage) == 'undefined' ) { alert('Your browser does not support HTML5 localStorage. Try upgrading.'); } else { try { // saves to the database using key/value localStorage.setItem('name', 'Hello World!'); } catch (e) { if (e == QUOTA_EXCEEDED_ERR) { // data wasn’t successfully saved due to quota exceed so throw an error alert('Quota exceeded!'); } } // Write out the item from local storage: document.write(localStorage.getItem('name')); //deletes the matching item from the database localStorage.removeItem('name'); } ","permalink":"https://danesparza.github.io/2010/09/using-html-5-local-storage/","summary":"HTML 5 includes a significant bump in what the browser itself can store (up from 4k for total cookie storage to something on the order of 5-10mb). Here\u0026rsquo;s a simple code sample that illustrates how to access local storage in HTML5:\n// First, make sure our browser supports HTML 5 local storage if (typeof(localStorage) == 'undefined' ) { alert('Your browser does not support HTML5 localStorage. Try upgrading.'); } else { try { // saves to the database using key/value localStorage.","title":"Using HTML 5 local storage"},{"content":" DataSet ds = GetDataSetFromStoredProc(\u0026quot;stored_proc_name\u0026quot;, new SqlParameter(\u0026quot;@parameter_name\u0026quot;, value_id)); var retItems = from dstable in ds.Tables[0].AsEnumerable() select new ClassThing() { PrimaryKeyId = dstable.Field\u0026lt;int\u0026gt;(\u0026quot;some_column_name\u0026quot;) }; ","permalink":"https://danesparza.github.io/2010/09/using-sql-tinyint-columns/","summary":" DataSet ds = GetDataSetFromStoredProc(\u0026quot;stored_proc_name\u0026quot;, new SqlParameter(\u0026quot;@parameter_name\u0026quot;, value_id)); var retItems = from dstable in ds.Tables[0].AsEnumerable() select new ClassThing() { PrimaryKeyId = dstable.Field\u0026lt;int\u0026gt;(\u0026quot;some_column_name\u0026quot;) }; ","title":"Using SQL tinyint columns"},{"content":" ","permalink":"https://danesparza.github.io/2010/09/jquery-api-browser/","summary":" ","title":"jQuery API browser"},{"content":"Amazon\u0026rsquo;s Cloudfront service is truly awesome. It\u0026rsquo;s a powerful, flexible, inexpensive way to get a content distribution network up and running so that you can play with the big boys on a startup budget.\nGetting up and running is a snap. First, make sure you\u0026rsquo;ve signed up for Amazon web services S3 and Cloudfront services. Signing up is free, but understand that Amazon charges modest fees for both S3 and Cloudfront.\n(To give you an idea of what kind of costs a tiny website like this will incur: It\u0026rsquo;s costing me all of $.04 this month to host static files with Cloudfront).\nFirst, in the AWS dashboard create a \u0026lsquo;bucket\u0026rsquo; in S3. A bucket is just a place to host files.\nNext, create any folders you\u0026rsquo;d like to organize your files. I have created 2 folders: \u0026lsquo;Scripts\u0026rsquo; and \u0026lsquo;Styles\u0026rsquo;.\nNext, double click on one of the folders to select it (kind of like windows explorer). Then, click \u0026lsquo;upload\u0026rsquo; to begin the file selection and upload process.\nNow, this part is kind of important: Be sure to set the permissions the files to \u0026lsquo;Make everything public\u0026rsquo;. You actually need to check the box.\nAfter your files have been uploaded, it\u0026rsquo;s time for the really cool part. Switch over to the \u0026lsquo;Cloudfront\u0026rsquo; dashboard in Amazon Web Services and click the \u0026lsquo;create distribution\u0026rsquo; button. Select your new S3 bucket.\nYou can (optionally) have your Cloudfront distribution resolve via a CNAME. If you\u0026rsquo;re a GoDaddy.com customer and you\u0026rsquo;d like help creating a CNAME, check out this help article.\n\u0026lt;!-- When using the hostname provided by Cloudfront, you can reference the script like this --\u0026gt; \u0026lt;script src=\u0026quot;http://d3h5p4zf44gxh.cloudfront.net/scripts/myscript.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- When using a CNAME in Amazon Cloudfront, you can reference the script like this --\u0026gt; \u0026lt;script src=\u0026quot;http://cdn.mydomain.net/scripts/myscript.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; ","permalink":"https://danesparza.github.io/2010/09/creating-a-cdn-with-amazon-cloudfront/","summary":"Amazon\u0026rsquo;s Cloudfront service is truly awesome. It\u0026rsquo;s a powerful, flexible, inexpensive way to get a content distribution network up and running so that you can play with the big boys on a startup budget.\nGetting up and running is a snap. First, make sure you\u0026rsquo;ve signed up for Amazon web services S3 and Cloudfront services. Signing up is free, but understand that Amazon charges modest fees for both S3 and Cloudfront.","title":"Creating a CDN with Amazon Cloudfront"},{"content":"When using the jQuery UI \u0026rsquo;transfer\u0026rsquo; effect for the first time, you might think the effect isn\u0026rsquo;t working. The documentation is sparse, but the call looks simple enough:\n// Use transfer effect $(\u0026quot;#txtProduct\u0026quot;).effect(\u0026quot;transfer\u0026quot;, { to: $(\u0026quot;#test\u0026quot;) }, 1000); If you add this to your page, add the html elements to make this work, and then run this code you\u0026rsquo;ll notice \u0026hellip; absolutely nothing.\nThat\u0026rsquo;s because you need to style the actual \u0026rsquo;transfer effect\u0026rsquo; itself. (The docs actually say this, although you might not be looking for it). Styling is as simple as:\n.ui-effects-transfer { border: 2px dotted gray; } ","permalink":"https://danesparza.github.io/2010/09/using-the-jquery-ui-transfer-effect/","summary":"When using the jQuery UI \u0026rsquo;transfer\u0026rsquo; effect for the first time, you might think the effect isn\u0026rsquo;t working. The documentation is sparse, but the call looks simple enough:\n// Use transfer effect $(\u0026quot;#txtProduct\u0026quot;).effect(\u0026quot;transfer\u0026quot;, { to: $(\u0026quot;#test\u0026quot;) }, 1000); If you add this to your page, add the html elements to make this work, and then run this code you\u0026rsquo;ll notice \u0026hellip; absolutely nothing.\nThat\u0026rsquo;s because you need to style the actual \u0026rsquo;transfer effect\u0026rsquo; itself.","title":"Using the jQuery UI 'transfer' effect"},{"content":"The short answer is you can\u0026rsquo;t. But there is a very nice workaround.\nI was perusing StackOverflow and came across this article talking about how to capture information from deleted rows and then use them in a join using the deleted pseudo table:\nHow do I delete from multiple tables using INNER JOIN in SQL server - Stack Overflow\nbegin transaction; declare @deletedIds table ( id int ); delete t1 /* Notice this next line is using the 'deleted' pseudo table: */ output deleted.id into @deletedIds; from table1 t1 join table2 t2 on t2.id = t1.id join table3 t3 on t3.id = t2.id; delete t2 from table2 t2 join @deletedIds d on d.id = t2.id; delete t3 from table3 t3 ... commit transaction; ","permalink":"https://danesparza.github.io/2010/09/how-do-delete-data-from-multiple-tables-at-once-in-sql/","summary":"The short answer is you can\u0026rsquo;t. But there is a very nice workaround.\nI was perusing StackOverflow and came across this article talking about how to capture information from deleted rows and then use them in a join using the deleted pseudo table:\nHow do I delete from multiple tables using INNER JOIN in SQL server - Stack Overflow\nbegin transaction; declare @deletedIds table ( id int ); delete t1 /* Notice this next line is using the 'deleted' pseudo table: */ output deleted.","title":"How to delete data from multiple tables at once in SQL"},{"content":"So what do you do when you\u0026rsquo;re using the nifty new \u0026rsquo;entity framework\u0026rsquo; and you\u0026rsquo;re getting data back with LINQ queries and you\u0026rsquo;ve reached the point where you want to get data back based on criteria in a related table?\nWell, if you\u0026rsquo;re not using a stored proc to do it for you \u0026ndash; you\u0026rsquo;ve got to do a join.\nThe join syntax in LINQ is similar to SQL syntax, but not quite the same.\nGiven the following relationships in the database\u0026hellip; \u0026hellip; the join would look something like this:\nvar shoppingLists = from user in Users join listUsers in ShoppingListUsers on user.UserId equals listUsers.UserId join lists in ShoppingLists on listUsers.ShoppingListId equals lists.ShoppingListId where user.UserId == userToFind.UserId select lists; return shoppingLists; ","permalink":"https://danesparza.github.io/2010/09/performing-a-join-using-linq/","summary":"So what do you do when you\u0026rsquo;re using the nifty new \u0026rsquo;entity framework\u0026rsquo; and you\u0026rsquo;re getting data back with LINQ queries and you\u0026rsquo;ve reached the point where you want to get data back based on criteria in a related table?\nWell, if you\u0026rsquo;re not using a stored proc to do it for you \u0026ndash; you\u0026rsquo;ve got to do a join.\nThe join syntax in LINQ is similar to SQL syntax, but not quite the same.","title":"Performing a join using LINQ"},{"content":"RedGate reflector and ASP.NET MVC2 rock.\nUsing this extension method:\n/// \u0026lt;summary\u0026gt; /// If the given model field has validation errors, this will emit the given CSS class name /// \u0026lt;/summary\u0026gt; /// \u0026lt;typeparam name=\u0026quot;TModel\u0026quot;\u0026gt;\u0026lt;/typeparam\u0026gt; /// \u0026lt;typeparam name=\u0026quot;TProperty\u0026quot;\u0026gt;\u0026lt;/typeparam\u0026gt; /// \u0026lt;param name=\u0026quot;htmlHelper\u0026quot;\u0026gt;\u0026lt;/param\u0026gt; /// \u0026lt;param name=\u0026quot;expression\u0026quot;\u0026gt;\u0026lt;/param\u0026gt; /// \u0026lt;param name=\u0026quot;cssClassToEmit\u0026quot;\u0026gt;\u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt;\u0026lt;/returns\u0026gt; public static MvcHtmlString ValidationCSSClassFor\u0026lt;TModel, TProperty\u0026gt;(this HtmlHelper\u0026lt;TModel\u0026gt; htmlHelper, Expression\u0026lt;Func\u0026lt;TModel, TProperty\u0026gt;\u0026gt; expression, string cssClassToEmit) { MvcHtmlString htmlString = null; // Figure out the expression text from the LambdaExpression using our nifty helper // (thank God for RedGate reflector or I would have never figured this one out) string expressionText = ExpressionHelper.GetExpressionText((LambdaExpression) expression); // Get the full field name from the expression string: string fullHtmlFieldName = htmlHelper.ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldName(expressionText); // Get the model state from the field name: ModelState modelState = htmlHelper.ViewData.ModelState[fullHtmlFieldName]; // Check to see if we have errors. If we don't, just get out: ModelErrorCollection errors = (modelState == null) ? null : modelState.Errors; ModelError error = ((errors == null) || (errors.Count == 0)) ? null : errors[0]; if((error == null)) { return null; } // At this point, we have errors -- but if we don't have a CSS class we're supposed to emit // ... well, we're just SOL if(!string.IsNullOrEmpty(cssClassToEmit)) { htmlString = MvcHtmlString.Create(cssClassToEmit); } return htmlString; } I\u0026rsquo;m now able to do the following awesome sauce in an ASP.NET MVC2 view:\n\u0026lt;div id=\u0026quot;email_tip\u0026quot; class=\u0026quot;tip \u0026lt;%: Html.ValidationCSSClassFor(m=\u0026gt;m.Email, \u0026quot;error\u0026quot;) %\u0026gt;\u0026quot; style=\u0026quot;display: none;float: left;\u0026quot;\u0026gt; \u0026lt;%: Html.ValidationMessageFor(m=\u0026gt;m.Email) %\u0026gt; \u0026lt;/div\u0026gt; ","permalink":"https://danesparza.github.io/2010/07/asp-net-mvc2-custom-validation-helper/","summary":"RedGate reflector and ASP.NET MVC2 rock.\nUsing this extension method:\n/// \u0026lt;summary\u0026gt; /// If the given model field has validation errors, this will emit the given CSS class name /// \u0026lt;/summary\u0026gt; /// \u0026lt;typeparam name=\u0026quot;TModel\u0026quot;\u0026gt;\u0026lt;/typeparam\u0026gt; /// \u0026lt;typeparam name=\u0026quot;TProperty\u0026quot;\u0026gt;\u0026lt;/typeparam\u0026gt; /// \u0026lt;param name=\u0026quot;htmlHelper\u0026quot;\u0026gt;\u0026lt;/param\u0026gt; /// \u0026lt;param name=\u0026quot;expression\u0026quot;\u0026gt;\u0026lt;/param\u0026gt; /// \u0026lt;param name=\u0026quot;cssClassToEmit\u0026quot;\u0026gt;\u0026lt;/param\u0026gt; /// \u0026lt;returns\u0026gt;\u0026lt;/returns\u0026gt; public static MvcHtmlString ValidationCSSClassFor\u0026lt;TModel, TProperty\u0026gt;(this HtmlHelper\u0026lt;TModel\u0026gt; htmlHelper, Expression\u0026lt;Func\u0026lt;TModel, TProperty\u0026gt;\u0026gt; expression, string cssClassToEmit) { MvcHtmlString htmlString = null; // Figure out the expression text from the LambdaExpression using our nifty helper // (thank God for RedGate reflector or I would have never figured this one out) string expressionText = ExpressionHelper.","title":"ASP.NET MVC2 custom validation helper"}]